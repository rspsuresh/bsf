<link rel="stylesheet" href="<?php echo $this->basePath() . '/css/workorder.css';?>"/>
<style>
.pagination-lg > li > a, .pagination-lg > li > span {font-size:15px !important;	padding:5px 15px !important;}
#treeGrid .jqx-grid-header 							{height:75px !important;}
.jqx-item 											{text-align:center;}
</style>
<div class="content_wrapper padlr0">
  <div class="container-fluid padlr0">
    <div class="col-lg-12">
      <h1 class="float_l">Project Type Master</h1>
      <div class="edit_del commargin_top float_r">
        <ul>
          <li> <a title="Add Project Type" href="javascript: projecttypeAdd('add')" class="edit_al"><i class="fa fa-plus"></i> Add Project Type</a> </li>
        </ul>
      </div>
    </div>
    <div class="col-lg-12 commargin_top clear">
      <div class="table-responsive clear">
        <div id="treeGrid"> </div>
      </div>
    </div>
  </div>
</div>
<!--Delete Confirmation Modal-->
<div class="modal fade" id="DeleteModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h1>Why do you want to delete <span id="delProjectTypeName" class="bld-txt"></span>?</h1>
      </div>
      <div class="modal-body">
        <div class="col-lg-10 col-lg-offset-1 col-md-10 col-md-offset-1 col-sm-10 col-sm-offset-1">
          <form class="form-horizontal">
            <div class="row m_tb40">
              <div class="form-group col-lg-12 req_flds">
                <textarea id="remarks" maxlength="250" class="form-control lbl_move" label="Enter the remarks"/>
                </textarea>
              </div>
            </div>
          </form>
        </div>
      </div>
      <div class="modal-footer clear">
        <div class="col-lg-12 savebtn_area no_border">
          <ul>
            <li class="save_btn float_r"> <a href="javascript:void(0);" id="btnDeleteYes" class="ripple">Delete</a> </li>
            <li class="cancel_btn float_r"><a href="javascript:void(0);" aria-hidden="true" data-dismiss="modal" class="ripple">Cancel</a></li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</div>
<!--Edit Confirmation Modal-->
<div id="EditModal" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h1>Edit Project Type</h1>
      </div>
      <div class="modal-body">
        <div class="col-lg-10 col-lg-offset-1 col-md-10 col-md-offset-1 col-sm-10 col-sm-offset-1">
          <form id="editForm">
            <div class="row m_tb40">
              <div class="col-lg-12 form-group">
                <input type="hidden" id="projectTypeId" name="ProjectTypeId">
                <input type="hidden" name="csrf" value="<?php echo isset($csrf)?$csrf:''; ?>">
                <input type="text" id="projecttypeName" name="projecttypeName" class="form-control lbl_move" maxlength="100" label="Name"/>
              </div>
            </div>
          </form>
        </div>
      </div>
      <div class="modal-footer clear">
        <div class="col-lg-12 savebtn_area no_border">
          <ul>
            <li class="save_btn float_r"> <a href="javascript:void(0);" id="btnEditYes" class="ripple">Update</a> </li>
            <li class="cancel_btn float_r"><a href="javascript:void(0);" aria-hidden="true" data-dismiss="modal" class="ripple">Cancel</a></li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</div>
<!--Add Confirmation Modal-->
<div id="AddModal" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h1>Create Project Type</h1>
      </div>
      <div class="modal-body">
        <div class="col-lg-10 col-lg-offset-1 col-md-10 col-md-offset-1 col-sm-10 col-sm-offset-1">
          <form method="post" id="addForm" autocomplete="off">
            <div class="row m_tb40">
              <div class="form-group padtop20 col-lg-12">
                <input type="hidden" name="csrf" value="<?php echo isset($csrf)?$csrf:''; ?>">
                <input type="text" id="projecttypeNamenew" name="projecttypeNamenew" autocomplete="off" class="form-control lbl_move" maxlength="100" label="Name"/>
              </div>
            </div>
          </form>
        </div>
      </div>
      <div class="modal-footer clear">
        <div class="col-lg-12 savebtn_area no_border">
          <ul>
            <li class="save_btn float_r"> <a href="javascript:void(0);" id="btnAddYes" class="ripple">Create</a> </li>
            <li class="cancel_btn float_r"><a href="javascript:void(0);" aria-hidden="true" data-dismiss="modal" class="ripple">Cancel</a></li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</div>
<script type="text/javascript">
    var data = <?php echo (isset($projecttypeReg)) ? json_encode($projecttypeReg) : ''?>,
        $treeGrid = $("#treeGrid"),
        $deleteModal = $('#DeleteModal'),
		$editModal = $('#EditModal'),
		$addModal = $('#AddModal'),
        $remarks = $('#remarks'),
		$projecttypeName = $('#projecttypeName'),
		$projecttypeNamenew = $('#projecttypeNamenew');
    $(function () {
        var source = {
            localdata:data,
            dataType: "json",
            dataFields: [
                { name: 'ProjectTypeId', type: 'number' },
                { name: 'ProjectTypeName', type: 'string' }
            ],
            id: 'ProjectTypeId'
        };

        var dataAdapter = new $.jqx.dataAdapter(source);
        $treeGrid.jqxGrid({
            width: "100%",
            source: dataAdapter,
            sortable: true,
            pagerButtonsCount: 6,
            filterable:true,
            pageable:true,
            rowDetails: true,
            autoheight: true,
            selectionmode: 'singlerow',
            showfilterrow: true,
            editable: false,
            altrows: true,
            enabletooltips: true,
			showfilterrow: true,
            columns: [
                { text: 'ProjectTypeId', datafield: 'ProjectTypeId', hidden: true, filterable: false},
                { text: 'Name', dataField: 'ProjectTypeName', width:'55%'},
                { text: 'Action', sortable: false, filterable: false, align: 'center', width:'45%',
                    cellsrenderer: function (row) {
                        var editLink = '<a title="Edit" href="javascript: projecttypeEdit('+row+')" style="padding-left: 15px;"><i class="fa fa-pencil-square-o reg-icon"></i></a>';
                        return editLink + "&nbsp;&nbsp;" + '<a title="Delete" href="javascript: projecttypeDelete('+row+')"><i class="fa fa-trash-o reg-icon"></i></a>';
                    }
                }
            ]
        });

        $('#btnDeleteYes').on('click', function () {
            var remarks = $remarks.val();
            if(remarks.length == 0) {
                showError($remarks, 'Required!');
                return;
            } else
                removeError($remarks);

            $deleteModal.modal('hide');
            var rowData = $treeGrid.jqxGrid('getrowdata', $deleteModal.data('row'));
            $.ajax({
                url: getBaseURL() + 'cb/master/deleteprojecttype',
                type: 'POST',
                data: {"ProjectTypeId": rowData.ProjectTypeId, "Remarks": remarks},
                success:function(data, textStatus, jqXHR){
                    if (jqXHR.status == 200)
                        $treeGrid.jqxGrid("deleterow", rowData.uid);
                    else
                        alert('Cannot delete this project type, it is already in use!');
                },
                error:function(jqXHR, textStatus, errorThrown){
                    alert('Failed to delete the Projecttype!');
                }
            });
            $remarks.val('');	
        });
		
		$('#btnEditYes').on('click', function () {
            var projecttypeName = $projecttypeName.val();
            
			validate(function(isSuccess) {
                if(isSuccess) {
                    $editModal.modal('hide');
                    var rowData = $treeGrid.jqxGrid('getrowdata', $editModal.data('row'));
                    $.ajax({
                        url: getBaseURL() + 'cb/master/editprojecttype',
                        type: 'POST',
                        data: {"ProjectTypeId": rowData.ProjectTypeId, "projecttypeName": projecttypeName},
                        success:function(data, textStatus, jqXHR){
                            if (jqXHR.status == 200){
                                $treeGrid.jqxGrid("setcellvalue", $editModal.data('row'), 'ProjectTypeName', projecttypeName);
                            } else {
                                alert('Failed to Edit the Projecttype!');
                            }
                        },
                        error:function(jqXHR, textStatus, errorThrown){
                            alert('Failed to Edit the Projecttype!');
                        }
                    });	
                    $projecttypeName.val('');
                } else {
                    return false;
                }
            });
            
            function validate(callback) {
                if(projecttypeName.length == 0) {
                    showError($projecttypeName, 'Required!');
                    callback(false);
                    return false;
                } else {
                    removeError($projecttypeName);
                }
                
                //validate vendor name already found for addMode
                $.ajax({
                    url:getBaseURL()+ 'cb/master/checkprojecttypeFound',
                    type:"post",
                    data: $('#editForm').serialize(),
                    dataType:"json",
                    success:function(data, textStatus, jqXHR){
                        //alert(data)
                        if(data.results != false){
                            showError($projecttypeName, 'Project Type Name already found!');
                            callback(false);
                            return false;
                        }
                        else{
                            removeError($projecttypeName);
                            callback(true);
                        }
                    },
                    error:function(jqXHR, textStatus, errorThrown){
                        callback(false);
                        return false;
                    }
                });
            }
		});
        //bindJqxGridAutoResize();
    });

	$('#btnAddYes').on('click', function () {
		var projecttypeNamenew = $projecttypeNamenew.val();
			
        validate(function(isSuccess) {
            if(isSuccess) {
                $addModal.modal('hide');	
                $.ajax({
                    url: getBaseURL() + 'cb/master/addprojecttype',
                    type: 'POST',
                    data: $('#addForm').serialize(),
                    async: false,
                    success:function(data, textStatus, jqXHR){
                        if (jqXHR.status == 200){
                        $treeGrid.jqxGrid('addrow',null,JSON.parse(data));
                        } else {
                            alert('Failed to Add Projecttype!');
                        }
                    },
                    error:function(jqXHR, textStatus, errorThrown){
                        alert('Failed to Add Projecttype!');
                    }
                });	
                $projecttypeNamenew.val('');
            } else {
                return false;
            }
        });
            
        
        function validate(callback) {
            if(projecttypeNamenew.length == 0) {
                showError($projecttypeNamenew, 'Required!');
                callback(false);
                return false;
            } else {
                removeError($projecttypeNamenew);
            }

            //validate vendor name already found for addMode
            $.ajax({
                url:getBaseURL()+ 'cb/master/checkprojecttypefound',
                type:"post",
                data: $('#addForm').serialize(),
                dataType:"json",
                async: false,
                success:function(data, textStatus, jqXHR){
                    //alert(data)
                    if(data.results != false){
                        showError($projecttypeNamenew, 'Name already found!');
                        callback(false);
                        return false;
                    }
                    else{
                        removeError($projecttypeNamenew);
                        callback(true);
                    }
                },
                error:function(jqXHR, textStatus, errorThrown){
                    callback(false);
                    return false;
                }
            });
        }
	});
	
    function projecttypeDelete(row) {
		var rowData = $treeGrid.jqxGrid('getrowdata', row);
        $deleteModal.data('row', row).modal('show');
		$('#delProjectTypeName').html(rowData.ProjectTypeName);
		$("#remarks").val('');
    }
	
	function projecttypeEdit(row) {
        var rowData = $treeGrid.jqxGrid('getrowdata', row);
        $editModal.data('row', row).modal('show');
		$("#projecttypeName").val(rowData.ProjectTypeName);
		$("#projecttypeName").trigger('change');
        $('#projectTypeId').val(rowData.ProjectTypeId);
    }
	
	function projecttypeAdd() {
        $addModal.modal('show');
		$("#projecttypeNamenew").val('');
    }
</script> 
