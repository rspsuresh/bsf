<script type="text/javascript" src="<?php echo $this->basePath(); ?>/js/select2.full.min.js"></script>
<link type="text/css" rel="stylesheet" href="<?php echo $this->basePath(); ?>/css/select2.min.css" />
<link rel="stylesheet" href="<?php echo $this->basePath(); ?>/css/workorder.css"/>
<!-- dummy row -->
<script id="dummy-row"  type="text/template" class="hide">
	<tr>
		<td width="10%" class="tbl_input_td"><input type="hidden" name="extraItemId__" id="extraItemId__"/>
		<input class="tbl_input" type="text" value="" name="desc__" id="desc__"/>
		<td width="9%"><input class="tbl_input txt_right rate" type="text" value="" readonly name="transRate__" id="transRate__"/></td>
		<td width="9%"><input class="tbl_input txt_right quantity" type="text" value="" name="transQuantity__" id="transQuantity__" onKeyPress="return isDecimal(event,this);" onchange = "calcAmount(this);"/></td>
		<td width="9%"><input class="tbl_input txt_right amount" type="text" value="" readonly name="transAmount__" id="transAmount__"/></td>
		<td width="3%" align="center" class="action_btns_td">
			<ul class="action_btns">
				<li>
					<a class="deleteTr__" onclick="deleteRow(this, event);" style="display: none;"><i class="fa fa-trash-o" data-toggle="tooltip" data-placement="top" data-original-title="Delete"></i></a>
				</li>
			</ul>
		</td>
	</tr>
</script>
<!-- dummy row -->
<div class="content_wrapper padlr0">
	<div class="container-fluid">
    	<div class="row">
			<!-- newly addind Div-->
			<form action="" method="post" onSubmit="return validate();">
                <div id="Step1">
                    <div class="col-lg-12">
                        <h1  data-bsfhead=" Extra Item WorkDone" class="txt_center">Extra Item Work Done</h1>
                    </div>
                    <div class="col-lg-12 clear padlr0">
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                            <div class="col-lg-offset-3">
                                <label for="booking_no" class="bk_lbl bk_lbl_inpt">Extra Work Done No <span class="colon_r">:</span></label>
                                <input type="text" class="bk_lbl_inpt inputbg_ef bk_inpt1" <?php if ($arrVNo["genType"] == true){ ?> readonly <?php } ?> name="ExtraItemDoneNo" id="booking_no" value="<?php if ($arrVNo["genType"] == true){ echo $arrVNo['voucherNo']; } else { echo "";}?>" /> 
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 col-lg-pull-1 col-md-pull-1 col-sm-pull-1">
                            <div class="col-lg-offset-5">
                                <label for="booking_date" class="bk_lbl bk_lbl_inpt"><span class="bkspan_calendar"><i class="fa fa-calendar-o"></i></span> ExtraWork Done Date <span class="colon_r">:</span></label>
                                <input type="text" class="date_picker bk_lbl_inpt bk_inpt inputbg_ef" name="done_date" id="booking_date" data-bsfshare="WorkDone Date" value="<?php echo date('d-m-Y'); ?>" />
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12 clear">
                        <div class="col-lg-4 col-lg-offset-4 col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2">
                            <div class="row form-group">   
                                <div class="form-group col-lg-12 m3_auto padtop20">
                                    <input type="text" name="unitname" id="unitname" class="form-control lbl_move"data-bsfshare="Project/Unit/Buyer" label="Project/Unit/Buyer" value="" />
                                    <input type="hidden" name="unitId" id="unitid" value=""/>
                                </div>
                            </div>
                            <div id="continueBtn" class="col-lg-12 savebtn_area no_border">
                                <ul>
                                    <li class="save_btn m_auto">
                                        <a href="javascript:void(0);" class="ripple"  onclick="show_step2();">Continue</a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div id="Step2">
                    <!--div class="col-lg-12">
                        <h1 class="txt_center">Work Done</h1>
                    </div-->
                    <input type="hidden" name="count" id="count" value="0" />
                    <input type="hidden" name="finalCount" id="finalCount" value="0" />
                    <div class="col-lg-12 clear">
                        <div class="table-responsive">
                            <table id="extra-workdone-table" class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Description</th>
										<th>Rate</th>
										<th>Quantity</th>
                                        <th class="txt_right">Amount</th>
                                        <th>&nbsp; </th>
                                    </tr>
                                </thead>
                                <tbody id="startcount" data-count="0">
                                    
                                </tbody>
								<tfoot>
									<tr>
                                        <td align="right" colspan="3" class="rate_pri">Gross Total</td>
                                        <td width="5%" class="tbl_input_td"><input id="gross-total" readonly class="tbl_input txt_right grossAmount" name="grossAmount" type="text"/></td>
                                        <td>&nbsp;</td>
                                    </tr>
								</tfoot>
                            </table>
                        </div>
                    </div>
                    <div class="col-lg-12 savebtn_area clear">
                        <ul>
                            <li class="dropdown save_btn float_l">
                                <a href="javascript:void(0);" onclick="$('#Step1').show(); $('#Step2').hide(); $('#unitname').attr('readonly',false); $('#continueBtn').show()" class="ripple">back</a>
                            </li>
                            <li class="dropdown save_btn float_r">
                            	<input type="submit" name="submit" class="ripple" value="Save"/>
                            </li>
                        </ul>
                    </div>
                </div>
		  	</form>
        </div>
	</div>
</div>
<script>
function validate(){
	if($('#finalCount').val()==0){
		alert("Atlease one Extra Item Must be Selected");
		return false
	}
}

$(document).ready(function() {
	$('#Step1').show();
	$('#Step2').hide();
   // bindTaxCalculation();

});
var extraItemData,tmpExtraItemData;
$(document).ready(function() {
	$(".multiple_dropdown").select2({
	});
});
var arr_Units = <?php echo (isset($unitList)) ? json_encode($unitList) : '[]';?>;
var $unitname = $('#unitname'),$UnitId = $('#unitid');
$unitname.autocomplete({
  lookup: arr_Units,
  showNoSuggestionNotice: false,
  lookupFilter: function (suggestion, originalQuery, queryLowerCase) {
      if (queryLowerCase == '*') {
          return suggestion.value;
      } else {
          var re = new RegExp($.Autocomplete.utils.escapeRegExChars(queryLowerCase), 'gi');
          return re.test(suggestion.value);
      }
  }, onSelect: function (suggestion) {
      if (suggestion) {
          $UnitId.val(suggestion.data);
          $(this).removeClass('error');
      }
  }, onSearchStart: function (suggestion) {
      $UnitId.val(0);
  }, onSearchComplete: function (query, suggestions) {
      if (!suggestions.length) {
          $UnitId.val(0);
          $(this).addClass('error');
      } else $(this).removeClass('error');
  }
});
  
function bindExtraItemAutoComplete() {
    var $otherCost = $('input[id^=desc_');
	
    $.each($otherCost, function () {
        var $this = $(this),
            name = $this[0].id;
        if (name.indexOf('__') != -1) return;
        var arrname = name.split('_');
        var key1 = arrname[1];
        checkOtherCost(name);
        $this.unbind('autocomplete');
        $this.autocomplete({
            lookup: tmpExtraItemData,
            lookupFilter: function (suggestion, originalQuery, queryLowerCase) {
                if (queryLowerCase == '*') {
                    return suggestion.value;
                } else {
                    var re = new RegExp($.Autocomplete.utils.escapeRegExChars(queryLowerCase), 'gi');
                    return re.test(suggestion.value);
                }
            }, onSelect: function(suggestion) {
                if(suggestion) {

                    $("#extraItemId_" + key1).val(suggestion.data);
					$("#transRate_" + key1).val(sanitizeNumber(suggestion.Rate));
					$("#transQuantity_" + key1).val(sanitizeNumber(suggestion.Quantity));
					var amount = sanitizeNumber(suggestion.Rate) * sanitizeNumber(suggestion.Quantity);
                    $("#transAmount_" + key1).val(sanitizeNumber(amount));
                    //$('#amount_' + key1).html(suggestion.Amount);
                    removeError($(this));
					
					$("#transQuantity_" + key1).trigger('change');

                    $(this).prop('disabled', true);
                    addNewRow($(this));
                }
            }, onSearchStart: function(suggestion) {
                $("#extraItemId_" + key1).val(0);
                removeError($(this));
            }, onSearchComplete: function (query, suggestions) {
                if(!suggestions.length && query.length > 1){
                    showError($(this), 'Required');
                    $("#extraItemId_" + key1).val(0);
                } else
                    removeError($(this));
            }
        });
    });
}
function addNewRow() {
    /* if ($tr.next('tr').length != 0)
        return; */
    //count = parseInt($('#startcount').attr('data-count'));
    count = parseInt($('#count').val());
    $('.deleteTr_' + count).show();
    template = $('#dummy-row').html();
    count++;
	
    template = template.replace(/__/g, '_' + count);
    $('#startcount').append(template);
    $('#count').val(count);
    var finalvalue =  parseInt($('#finalCount').val());
    finalvalue++;
    $('#finalCount').val(finalvalue);
	
    bindExtraItemAutoComplete();

    //calcNetTotal();
}
function deleteRow(x,e) {
    e.preventDefault();
    if (!confirm('Do you want to Delete'))
        return false;

	var $x = $(x),
        $tr = $x.closest('tr');
    $tr.remove();
	var finalCount = parseInt($('#finalCount').val());
	finalCount--;
	$('#finalCount').val(finalCount);
    bindExtraItemAutoComplete();

    //calcNetTotal();
    return false;
}
	
function checkOtherCost(x) {
    var arrname = x.split('_'),
	id= arrname[1],
	extraid = $('input[id^=extraItemId_]');
	
	tmpExtraItemData = extraItemData;
	tmpExtraItemData = $.grep(extraItemData, function (element, index) {
	
	var is_selected = true;
	
	$.each(extraid, function (i, obj) {
		var $this = $(this),
			key = $this[0].id.split('_')[1];
		if (key != id) {
			if (element.data == $this.val()) {
				is_selected = false;
			}
		}
	});
	return is_selected;
    });
}

function show_step2() {	
	if($('#booking_no').val()==0){
		alert("Please Enter Voucher Number");
		return false
	}
	if($('#unitid').val()!=""){
		load_extraItemList(function(isSuccess) {
			if(isSuccess){
				//$('#Step1').hide();
				$('#continueBtn').hide();
				$('#unitname').attr('readonly',true);
				$('#Step2').show();
			}
		});
		} else {
		alert("Please Select Project/unit/buyer");
		}
}

function load_extraItemList(callback) {
    var unit_id = $UnitId.val();
    if (/^\d+$/.test(unit_id) === false) {
        return;
    }
	
	$('#count').val(0);
	$('#startcount').html('');
	

    $.ajax({
        url: getBaseURL() + 'crm/extraitem/extra-item-list',
        data: {csrf: "<?php echo isset($csrf)?$csrf:''; ?>", UnitId: unit_id,'mode':'entry'},
        type: 'POST',
        success: function (data, status, xhr) {
            if (data.extraitem_list.length > 0) {
                extraItemData = data.extraitem_list;
                tmpExtraItemData = data.extraitem_list;
				addNewRow();
				//bindExtraItemAutoComplete();
				
				if (callback) {
					callback(true);
					return true;
				}
            } else {
				alert("ExtraItem Not Available");
				if (callback) {
					callback(false);
					return false;
				}
			}

            
        },
        error: function (xhr, status, error) {
            alert(xhr.responseText);
        }
    });
}

function calcAmount(x){
	var quantity = parseFloat($(x).val());
	var $tarTr = $(x).closest('tr');
	var $tarAmt = $tarTr.find('.amount');
	var rate = parseFloat($tarTr.find('.rate').val());

	var amt = 0;
	if(!isNaN(rate) && !isNaN(quantity)) {
		amt = rate * quantity;
	}
	var grossAmount = 0;
	$tarAmt.val(amt.toFixed(2));
	$('#extra-workdone-table').find('tbody tr .amount').each(function( index ) {
		var totAmt = parseFloat($( this ).val());
		if(!isNaN(totAmt)){
			grossAmount += totAmt;
		}
	});
	//alert(grossAmount);
	$('#gross-total').val(grossAmount.toFixed(2));
}
</script>
<script>
$(document).ready(function() {
	$(".single_dropdown").select2({
		placeholder: "",
		allowClear: true
	});

});
</script>
<!--table Add lines start--> 
<script>
/*
$(".mainTr").click(function(e){
	e.preventDefault();
	if(!$(this).closest("tr").next(".subTr").is(":visible")){
		$(this).closest("tr").next(".subTr").show();
		$(this).closest("tr").next(".subTr").find(".subDiv").slideDown("slow");	
		$(this).find("i").addClass("t ");
	}
		else{
		$(this).closest("tr").next(".subTr").find(".subDiv").slideUp("slow");
		$(this).closest("tr").next(".subTr").slideUp("slow");
		$(this).find("i").removeClass("tform");
	}
})


function calcNetTotal() {
    var  totAmt = 0,
        $extraBillTable = $('#extra-workdone-table');

    $extraBillTable.find('tr [id^="amount_"]').each(function() {
        var amt = parseFloat($(this).text());
        if(!isNaN(amt)) {
            totAmt += amt;
        }
    });

    $('#gross-total').val(totAmt);
	CalculateQualifier(totAmt,1);
}

bind_qualifierOnChange();
bind_calcNetAmount();

function bind_qualifierOnChange() {
    $('input[id^="QualTotalAmt_"]').on('change', function() {
        $('#tax-amount').val($(this).val()).trigger('change');
    });
}

function bind_calcNetAmount() {
    $('#tax-amount').on('change', function() {
        var totAmt = parseFloat($('#gross-total').val()),
            taxAmt = parseFloat($('#tax-amount').val());
        $('#net-total').val((totAmt + taxAmt).toFixed(3));
    });
}

function bindTaxCalculation() {
    var $mainTr = $(".qualChange");
    $mainTr.change(function (e) {
        calcNetTotal();
    });
}

$(document).ready(function() {
	$(".single_dropdown").select2({
		placeholder: "",
		allowClear: true
	});
	
	bindExpandMainTr();
    bindExpandMainTrInput();

    bindRQualExpandTr();
    bindRQualExpandTrInput();

    bindQualExpandTr();
    bindQualExpandTrInput();
});
$(".mainTr").click(function(e){
	e.preventDefault();
	if(!$(this).closest("tr").next(".subTr").is(":visible")){
		$(this).closest("tr").next(".subTr").show();
		$(this).closest("tr").next(".subTr").find(".subDiv").slideDown("slow");	
		$(this).find("i").addClass("tform");
	}
		else{
		$(this).closest("tr").next(".subTr").find(".subDiv").slideUp("slow");
		$(this).closest("tr").next(".subTr").slideUp("slow");
		$(this).find("i").removeClass("tform");
	}
});

function bindExpandMainTr() {
    var $mainTr = $(".mainTr");
    $mainTr.unbind('click');
    $mainTr.click(function (e) {
        e.preventDefault();
        if (!$(this).closest("tr").next(".subTr").is(":visible")) {
            closeMainTr();
            $(this).closest("tr").next(".subTr").show();
            $(this).closest("tr").next(".subTr").find(".subDiv").slideDown("slow");
        }
        else {
            $(this).closest("tr").next(".subTr").find(".subDiv").slideUp("slow");
            $(this).closest("tr").next(".subTr").slideUp("slow");
        }
    });
}

function bindExpandMainTrInput() {
    var $mainTr = $(".mainTrInput");
    $mainTr.focus(function (e) {
        if (!$(this).closest("tr").next(".subTr").is(":visible")) {
            closeMainTr();
            $(this).closest("tr").next(".subTr").show();
            $(this).closest("tr").next(".subTr").find(".subDiv").slideDown("slow");
        }
//        $(this).closest("tr").find(".mainTr").trigger('click');
    });
}

function closeMainTr() {
    var $mainTr = $(".mainTr");
    $.each($mainTr, function () {
        $(this).closest("tr").next(".subTr").find(".subDiv").slideUp("slow");
        $(this).closest("tr").next(".subTr").slideUp("slow");
    });
}

function bindRQualExpandTr() {
    var $mainTr = $(".rqualmainTr");
    $mainTr.unbind('click');
    $mainTr.click(function (e) {
        e.preventDefault();
        if (!$(this).closest("tr").next(".qualmainTr").is(":visible")) {
            closeRQualTr();
            $(this).closest("tr").next(".qualmainTr").show();
            $(this).closest("tr").next(".qualmainTr").find(".subDiv").slideDown("slow");
        }
        else {
            $(this).closest("tr").next(".qualmainTr").find(".subDiv").slideUp("slow");
            $(this).closest("tr").next(".qualmainTr").slideUp("slow");
        }
    });
}

function bindRQualExpandTrInput() {
    var $mainTr = $(".rqualmainTrInput");
    $mainTr.focus(function (e) {
        if (!$(this).closest("tr").next(".qualmainTr").is(":visible")) {
            closeRQualTr();
            $(this).closest("tr").next(".qualmainTr").show();
            $(this).closest("tr").next(".qualmainTr").find(".subDiv").slideDown("slow");
        }
    });
}

function closeRQualTr() {
    var $mainTr = $(".rqualmainTr");
    $.each($mainTr, function () {
        $(this).closest("tr").next(".qualmainTr").find(".subDiv").slideUp("slow");
        $(this).closest("tr").next(".qualmainTr").slideUp("slow");
    });
}


function bindQualExpandTr() {
    var $mainTr = $(".qualmainExp");
    $mainTr.unbind('click');
    $mainTr.click(function (e) {
        e.preventDefault();
        if (!$(this).closest("tr").next(".qualsubTr").is(":visible")) {
            closeQualTr();
            $(this).closest("tr").next(".qualsubTr").show();
            $(this).closest("tr").next(".qualsubTr").find(".subDiv").slideDown("slow");
        }
        else {
            $(this).closest("tr").next(".qualsubTr").find(".subDiv").slideUp("slow");
            $(this).closest("tr").next(".qualsubTr").slideUp("slow");
        }
    });
}

function bindQualExpandTrInput() {
    var $mainTr = $(".qualmainTrInput");
    $mainTr.focus(function (e) {
        if (!$(this).closest("tr").next(".qualsubTr").is(":visible")) {
            closeQualTr()
            $(this).closest("tr").next(".qualsubTr").show();
            $(this).closest("tr").next(".qualsubTr").find(".subDiv").slideDown("slow");
        }
    });
}

function closeQualTr() {
    var $mainTr = $(".qualmainExp");
    $.each($mainTr, function () {
        $(this).closest("tr").next(".qualsubTr").find(".subDiv").slideUp("slow");
        $(this).closest("tr").next(".qualsubTr").slideUp("slow");
    });
}

function showQualExpandButton() {
    var $mainTr = $(".qualExpandbut");
    $.each($mainTr, function () {
        if ($(this).closest("tr").find(".qualTypeId").val() == 1 || $(this).closest("tr").find(".qualTypeId").val() ==2) {
            $(this).show();
        } else {
            $(this).hide();
        }
    });
}
//qualifier Addition
function CalculateQualifier(baseValue, key1) {
    var rows = $('#QualRowId_' + key1).val();
    var sformula="";
    var dbaseAmt= baseValue;
    var dTotalQualAmt=0;

    for (i = 1; i <= rows; i++) {
        var sRef = $('#Qual_' + key1 + '_Ref_' + i).val().trim();
        var sFormula = $('#Qual_' + key1 + '_Exp_'+ i).val();
        var dPer = isNullCheck($('#Qual_' + key1 + '_ExpPer_'+ i).val(),'number');
        var sbaseRef = 'R0';
        if (parseFloatVal(dPer) ==0) dPer=100;
        sFormula = sFormula.replace(new RegExp(sbaseRef, 'g'), dbaseAmt);
        var fvaule = computeEval(sFormula);
        $('#Qual_' + key1 + '_ExpValue_' + i).val(numberFormat(fvaule,'C'));

        var iQualTypeid = $('#Qual_' + key1 + '_TypeId_' + i).val();
        if (iQualTypeid==1 || iQualTypeid==2) {
            var dTaxablePer = parseFloatVal(isNullCheck($('#Qual_' + key1 + '_TaxablePer_' + i).val(),'number'));
            var dTaxPer = parseFloatVal(isNullCheck($('#Qual_' + key1 + '_TaxPer_' + i).val(),'number'));
            var dCess = parseFloatVal(isNullCheck($('#Qual_' + key1 + '_CessPer_' + i).val(),'number'));
            var dEDCess = parseFloatVal(isNullCheck($('#Qual_' + key1 + '_EduCessPer_' + i).val(),'number'));
            var dHEDCess = parseFloatVal(isNullCheck($('#Qual_' + key1 + '_HEduCessPer_' + i).val(),'number'));
            var dNetPer = dTaxPer + (dTaxPer * (dCess +  dEDCess + dHEDCess))/100;
            $('#Qual_' + key1 + '_NetPer_' + i).val(dNetPer);

            $('#Qual_' + key1 + '_NetPer_' + i).val(numberFormat(dNetPer,'C'));
            $('#Qual_' + key1 + '_ExpPer_'+ i).val(numberFormat(dNetPer,'C'));

            var dTaxableAmt =  fvaule* (dTaxablePer/100);
            var dTaxAmt =  dTaxableAmt* (dTaxPer/100);
            var dCessAmt =  dTaxAmt* (dCess/100);
            var dEDAmt =  dTaxAmt* (dEDCess/100);
            var dHEDAmt =  dTaxAmt* (dHEDCess/100);
            var dNetAmt = dTaxAmt+dCessAmt+dEDAmt+dHEDAmt;

            $('#Qual_' + key1 + '_TaxableAmt_'+ i).val(numberFormat(dTaxableAmt,'C'));
            $('#Qual_' + key1 + '_TaxPerAmt_'+ i).val(numberFormat(dTaxAmt,'C'));
            $('#Qual_' + key1 + '_CessAmt_'+ i).val(numberFormat(dCessAmt,'C'));
            $('#Qual_' + key1 + '_EduCessAmt_'+ i).val(numberFormat(dEDAmt,'C'));
            $('#Qual_' + key1 + '_HEduCessAmt_'+ i).val(numberFormat(dHEDAmt,'C'));
            $('#Qual_' + key1 + '_NetAmt_'+ i).val(numberFormat(dNetAmt,'C'));

            dAmt = dNetAmt;
        } else {
            var dAmt = parseFloatVal(fvaule) * (parseFloatVal(dPer) / 100);
        }
        $('#Qual_' + key1 + '_Amount_' + i).val(numberFormat(dAmt,'C'));
        if ($('#Qual_' + key1 + '_YesNo_' + i).is(':checked') == true) dTotalQualAmt = dTotalQualAmt+ parseFloatVal(dAmt);
        for (j = i; j <= rows; j++) {
            var sFormula = $('#Qual_' + key1 + '_Exp_'+ i).val();
            sFormula = sFormula.replace(new RegExp(sRef, 'g'), dAmt);
        }
    }
    $('#QualTotalAmt_' + key1).val(numberFormat(dTotalQualAmt,'C')).trigger('change');
    qualTotal();
}
function computeEval(formula) {
    with (document.forms){
        with (Math) {
            A = eval((formula));
        }
    } return A;
}

function qualTotal() {
    var iRows = $('#QualTotalRowId').val();
    var arrQual =[];
    for (i = 1; i <= iRows; i++) {
        $qualrows = $('input[id*=Qual_'+i+'_Ref_]'),
        $.each($qualrows, function () {
            var $this = $(this),
                name = $this[0].id,
                keys = name.split('_'),
                key1 = keys[1],
                key2 = keys[3];

            var sQualName = $('#Qual_' + key1 + '_Desc_' + key2).val();
            var iQualifierId = $('#Qual_' + key1 + '_Id_' + key2).val();
            var dAmt =  parseFloat(isNullCheck($('#Qual_' + key1 + '_Amount_' + key2).val(),'number'));
            var sSign = $('#Qual_' + key1 + '_Sign_' + key2).val();
            if (sSign =="") sSign ="+";

            if (sSign =="-") { dAmt = dAmt*(-1); }

            if (dAmt !=0) {
                arrQual.push({QualifierId:iQualifierId, QualName: sQualName, Amount: dAmt});
            }
        });
    }

    var result = [];
    arrQual.reduce(function (res, value) {
        if (!res[value.QualifierId]) {
            res[value.QualifierId] = {
                Amount: 0,
                QualName: value.QualName,
                QualifierId: value.QualifierId
            };
            result.push(res[value.QualifierId])
        }
       res[value.QualifierId].Amount += value.Amount
        return res;
    }, {});

    var iCount=0;

    $("#totaltaxTable tbody").empty();
    $('#billqualrowid').val(iCount);
    $.each(result,function(index,element){
        iCount = +iCount+1;
        var $tbody = $('#totaltaxTable tbody');
        var template = $('#dummy-totaltaxTable tbody').html();
        $tbody.append(template.replace(/__1/g, '_' + iCount));

        $('#QualName_' + iCount).val(element.QualName);
        $('#QualAmt_' + iCount).val(numberFormat(element.Amount,'C'));
        $('#QualifierId_' + iCount).val(element.QualifierId);

        $('#billqualrowid').val(iCount);
    });
}*/
</script>