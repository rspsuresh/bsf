<script type="text/javascript" src="<?php echo $this->basePath(); ?>/js/select2.full.min.js"></script>
<link type="text/css" rel="stylesheet" href="<?php echo $this->basePath(); ?>/css/select2.min.css"/>
<link rel="stylesheet" href="<?php echo $this->basePath(); ?>/css/workorder.css"/>

<style type="text/css">
    #service-wrapper > tr.empty-row .delete-btn {
        display: none;
    }
</style>


<div class="content_wrapper padlr0">
    <div class="container-fluid padlr0">
        <div class="col-lg-12">
            <h1 class="text-center" data-bsfhead="Inventory Bill">Inventory Bill</h1>
        </div>
        <form id="bill-form" method="POST" action="">
            <input type="hidden" name="csrf" value="<?php echo isset( $csrf ) ? $csrf : ''; ?>">
            <input type="hidden" id="RegisterId" name="RegisterId"
                   value="<?php echo ( isset( $InvRegister ) ) ? $InvRegister[ 'RegisterId' ] : ''; ?>">
            <input type="hidden" id="LeadId" name="LeadId"
                   value="<?php echo ( isset( $InvRegister ) ) ? $InvRegister[ 'LeadId' ] : ''; ?>">
            <input type="hidden" id="ProjectId" name="ProjectId"
                   value="<?php echo ( isset( $InvRegister ) ) ? $InvRegister[ 'ProjectId' ] : ''; ?>">

            <div class="col-lg-12 clear padlr0">
                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                    <div class="col-lg-offset-3">
                        <label class="bk_lbl bk_lbl_inpt flt-l" for="booking_no">Bill No <span class="colon_r">:</span></label>
                        <input type="text" class="form-control bk_lbl_inpt bk_inpt inputbg_ef flt-l" data-bsfshare="RefNo" name="RefNo"
                               value="<?php echo ( isset( $InvRegister ) ) ? $InvRegister[ 'RefNo' ] : $svNo; ?>" <?php echo ( $genType == true ) ? 'readonly' : ''; ?>>
                    </div>
                </div>
                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 col-lg-pull-1 col-md-pull-1 col-sm-pull-1">
                    <div class="col-lg-offset-6">
                        <label class="bk_lbl bk_lbl_inpt flt-l" for="booking_date"><span class="bkspan_calendar"><i
                                    class="fa fa-calendar-o" style="padding-right:5px;"></i></span>Bill Date <span
                                class="colon_r">:</span></label>
                        <input type="text" class="form-control date_picker bk_lbl_inpt bk_inpt inputbg_ef flt-l"
                               name="RefDate" data-bsfshare="RefDate"
                               value="<?php echo ( isset( $InvRegister ) ) ? date( 'd-m-Y', strtotime( $InvRegister[ 'RefDate' ] ) ) : date( 'd-m-Y' ); ?>">
                    </div>
                </div>
            </div>

            <!---------------------------Form Area--------------------------->
            <div class="col-lg-12 flwup_topcnt fmg_topcnt clear" style="margin-bottom:10px;">
                <div class="col-lg-5 col-lg-offset-0 col-md-5 col-md-offset-0 col-sm-5 col-sm-offset-0 form-group">
                    <?php if( isset( $InvRegister ) ): ?>
                        <input type="text" class="form-control lbl_move" data-bsfshare="Project" readonly
                               label="Project / Unit / Buyer" value="<?php echo $InvRegister[ 'BuyerName' ]; ?>">
                        <input type="hidden" id="UnitId" name="UnitId" value="<?php echo $InvRegister[ 'UnitId' ]; ?>">
                    <?php else: ?>
                        <select id="UnitId" name="UnitId" data-bsfshare="UnitId" class="form-control single_dropdown lbl_move" style="width: 100%;"
                                label="Project / Unit / Buyer">
                            <option value=""></option>
                            <?php if ( isset( $arrUnits ) ):
                                foreach ( $arrUnits as $unit ): ?>
                                    <option data-project-id="<?php echo $unit[ 'ProjectId' ]; ?>" data-lead-id="<?php echo $unit[ 'LeadId' ]; ?>"
                                            value="<?php echo $unit[ 'UnitId' ]; ?>"> <?php echo $unit[ 'BuyerName' ]; ?> </option>
                                <?php endforeach;
                            endif; ?>
                        </select>

                        <div class="error_message"><p></p></div>
                    <?php endif; ?>
                </div>
            </div>

            <!---------------------------Form Area--------------------------->
            <div id="service-info-container" class="col-lg-12 clear" style="display: none;">
                <!---------------------------table area--------------------------->
                <div id="services-table" class="table-responsive animated fadeInUp" style="display: none;">
                    <table class="table tbltop_bdr0">
                        <thead>
                        <tr>
                            <th>Material Name</th>
                            <th>Unit</th>
                            <th class="text-right">Qty</th>
                            <th class="text-right">Rate</th>
                            <th class="text-right">Amount</th>
                            <th>&nbsp; </th>
                        </tr>
                        </thead>
                        <tbody id="service-wrapper" data-row-count="0">
                        </tbody>
                        <tfoot>
                        <tr>
                            <td colspan="3"></td>
                            <td class="text-right rate_pri">Total</td>
                            <td width="7%" class="text-right"><b id="total-amt"></b></td>
                            <td>&nbsp;</td>
                        </tr>
                        </tfoot>
                    </table>
                </div>
                <!---------------------------table area--------------------------->

                <!---------------------------Overall amount area--------------------------->
                <div class="col-lg-12 m_tb40 padlr0 clear">
                    <div class="col-lg-6 col-lg-offset-0 col-md-6 col-md-offset-0 col-sm-6 form-group">
                        <textarea rows="3" data-bsfshare="Remarks" id="Remarks" class="narration_textarea" name="Remarks"
                                  placeholder="Inventory Bill Remarks..."
                            ><?php echo ( isset( $InvRegister ) ) ? $InvRegister[ 'Remarks' ] : ''; ?></textarea>

                        <div class="error_message"><p></p></div>
                    </div>
                    <div class="col-lg65 col-lg-offset-0 col-md-6 col-md-offset-0 col-sm-6 padlr0">
                        <ul class="nt-pay">
                            <li>
                                <label>Service Tax 14.5% : </label>
                                <i class="fa fa-inr cur-cs"></i>
                                <input type="hidden" name="ServiceCharge" id="ServiceCharge" value="14.5">
                                <input type="text" id="QualAmount" data-bsfshare="QualAmount" name="QualAmount" class="val-dis"
                                       value="<?php echo ( isset( $InvRegister ) ) ? $this->commonHelper()->sanitizeNumber( $InvRegister[ 'QualAmount' ], 2 ) : ''; ?>"
                                       readonly>
                            </li>
                            <li>
                                <label>Gross Amount : </label>
                                <i class="fa fa-inr cur-cs"></i>
                                <input type="text" id="GrossAmount" name="GrossAmount" data-bsfshare="GrossAmount" class="val-dis"
                                       value="<?php echo ( isset( $InvRegister ) ) ? $this->commonHelper()->sanitizeNumber( $InvRegister[ 'GrossAmount' ], 2 ) : ''; ?>">
                            </li>
                            <li>
                                <label>Net Amount : </label>
                                <i class="fa fa-inr cur-cs"></i>
                                <input type="text" id="NetAmount" name="NetAmount" data-bsfshare="NetAmount" class="val-dis"
                                       value="<?php echo ( isset( $InvRegister ) ) ? $this->commonHelper()->sanitizeNumber( $InvRegister[ 'NetAmount' ], 2 ) : ''; ?>"
                                       readonly>
                            </li>
                        </ul>
                    </div>
                </div>
                <!---------------------------Overall amount area end--------------------------->
            </div>
        </form>
    </div>
</div>
<!---------------------------button--------------------------->
<div class="col-lg-12 savebtn_area clear">
    <ul>
        <li class="dropdown save_btn float_r"><a href="javascript:void(0);" id="save-btn" class="ripple">Submit</a></li>
    </ul>
</div>
<script type="text/template" id="service-row-template">
    <tr id="service__">
        <td width="15%" class="form-group">
            <input class="tbl_input service-name" name="service___name" type="text"/>
            <input type="hidden" class="tbl_input service-id" name="service___Id"/>

            <div class="error_message"><p></p></div>
        </td>
        <td width="5%" class="form-group">
            <input class="tbl_input text-right service-unit" name="service___Unit" type="text" readonly/>

            <div class="error_message"><p></p></div>
        </td>
        <td width="5%" class="form-group">
            <input class="tbl_input text-right service-qty" name="service___Qty" type="text"
                   onkeypress="return isDecimal(event, this)"/>

            <div class="error_message"><p></p></div>
        </td>
        <td width="6%" class="form-group">
            <input class="tbl_input text-right service-rate" name="service___Rate" type="text"
                   onkeypress="return isDecimal(event, this)"/>

            <div class="error_message"><p></p></div>
        </td>
        <td width="7%" class="form-group text-right">
            <input class="tbl_input text-right service-amt" name="service___Amount"
                   onkeypress="return isDecimal(event, this)"/>

            <div class="error_message"><p></p></div>
        </td>
        <td width="2%" align="center" class="action_btns_td">
            <ul class="action_btns">
                <li><a href="#"><i class="fa fa-trash-o delete-btn" data-toggle="tooltip" data-placement="left"
                                   data-original-title="Delete"></i></a></li>
            </ul>
        </td>
    </tr>
</script>
<!---------------------------button--------------------------->

<script type="text/javascript">

$(function () {

    var arrServices = [];
    var arrUnitServices = [];

    var $UnitId = $('#UnitId'),
        $serviceWrapper = $('#service-wrapper'),
        $totAmt = $('#total-amt'),
        $saveBtn = $('#save-btn'),
        $billForm = $('#bill-form'),
        $servicesTable = $('#services-table'),
        $serviceInfoContainer = $('#service-info-container'),
        $GrossAmount = $('#GrossAmount'),
        $NetAmount = $('#NetAmount'),
        $QualAmount = $('#QualAmount'),
        $SaveBtnArea = $('.savebtn_area'),
        $Remarks = $('#Remarks'),
        $ServiceCharge = $('#ServiceCharge'),
        $LeadId = $('#LeadId'),
        $ProjectId = $('#ProjectId'),
        isEditMode = <?php echo (isset($InvRegister))?'true':'false'; ?>;

    init();
    bindLoadServices_onChange();
    bindServices_autoComplete();
    bindSaveBtn_onClick();
    bindCalcRowWiseTotal_onChange();

    $UnitId.trigger('change');

    function init() {
        $(".single_dropdown").select2({
            placeholder: "",
            allowClear: true
        });
    }

    function bindLoadServices_onChange() {

        $UnitId.on('change', function () {
            loadServices();
        });

        function loadServices() {

            var UnitId = parseInt($UnitId.val()),
                ProjectId = parseInt($UnitId.find('option:selected').attr('data-project-id')),
                LeadId = parseInt($UnitId.find('option:selected').attr('data-lead-id')),
                RegisterId = parseInt($('#RegisterId').val());

            if(isEditMode) {
                ProjectId = parseInt($ProjectId.val());
            } else {
                $LeadId.val(LeadId);
            }

            $serviceWrapper.html('');
            $servicesTable.hide();
            $SaveBtnArea.addClass('hide');
            if (isNaN(UnitId) || isNaN(ProjectId)) {
                $serviceInfoContainer.hide();
                return;
            }

            if (isNaN(RegisterId)) {
                RegisterId = 0;
            }

            $.ajax({
                url: "<?php echo $this->basePath(); ?>/crm/property/inventory-services",
                type: 'POST',
                data: {
                    csrf: "<?php echo isset($csrf)?$csrf:''; ?>",
                    ProjectId: ProjectId,
                    RegisterId: RegisterId,
                    UnitId: UnitId
                },
                success: function (data, status, xhr) {

                    if (data.InventoryServices.length > 0) {
                        arrServices = data.InventoryServices;
                    }

                    if (data.existsInvServices.length > 0) {
                        $.each(data.existsInvServices, function (index, serviceData) {
                            addServiceRow(serviceData);
                        });
                    }
                    addServiceRow();

                    $servicesTable.show();
                    $serviceInfoContainer.show();

                    $SaveBtnArea.removeClass('hide');
                },
                error: function (xhr, status, error) {
                    alert(status + "-----" + error);
                }
            });
        }
    }

    function bindSaveBtn_onClick() {
        $saveBtn.on('click', function (ev) {
            ev.preventDefault();

            var unitId = parseInt($UnitId.val()),
                remarks = $Remarks.val().trim(),
                hasError = false;

            if (isNaN(unitId)) {
                showErrorMsg($UnitId, 'Unit is required!');
                hasError = true;
            } else {
                removeErrorMsg($UnitId);
            }

            validateServiceRow(function (isSuccess) {
                hasError = (!isSuccess);
            });

            if (remarks == '') {
                showErrorMsg($Remarks, 'Remarks is required!');
                hasError = true;
            } else {
                removeErrorMsg($Remarks);
            }

            if (hasError == false) {
                $billForm.submit();
            }
        });
    }

    function addServiceRow(serviceData) {

        if ($serviceWrapper.find('tr.empty-row').length > 0) {
            return;
        }

        validateServiceRow(function (isSuccess) {
            if (isSuccess) {
                addRow();
            } else {
                return false;
            }
        });

        function addRow() {
            var rowCount = (parseInt($serviceWrapper.attr('data-row-count'))) + 1;

            var servHtml = $('#service-row-template').html();
            servHtml = servHtml.replace(/service__/g, 'service_' + rowCount);
            $serviceWrapper.append(servHtml);

            var $tarTr = $serviceWrapper.find('#service_' + rowCount);
            if (typeof serviceData != 'undefined') {
                var qty = parseFloat(serviceData.Qty).toFixed(2);
                if (isNaN(qty)) {
                    qty = '';
                }
                var rate = parseFloat(serviceData.Rate).toFixed(2);
                if (isNaN(rate)) {
                    rate = '';
                }
                var amt = parseFloat(serviceData.Amount).toFixed(2);
                if (isNaN(amt)) {
                    amt = '';
                }
                $tarTr.find('input.service-name').val(serviceData.MaterialName);
                $tarTr.find('input.service-id').val(serviceData.MaterialId);
                $tarTr.find('input.service-qty').val(qty);
                $tarTr.find('input.service-rate').val(rate);
                $tarTr.find('.service-amt').val(amt);
                $tarTr.find('.service-unit').val(serviceData.MUnitName);
            } else {
                $tarTr.addClass('empty-row');
            }

            $tarTr.find(".single_dropdown").select2({
                placeholder: 'Select Type',
                allowClear: true
            });

            $serviceWrapper.attr('data-row-count', rowCount);

            calcTotal();
        }

    }

    function validateServiceRow(callback) {

        var isSuccess = true;
        $serviceWrapper.find('tr:not(.empty-row)').each(function () {
            var $servName = $(this).find('.service-name'),
                Name = $servName.val().trim(),
                Id = parseInt($(this).find('.service-id').val()),
                $servQty = $(this).find('.service-qty'),
                Qty = parseFloat($servQty.val()),
                $servRate = $(this).find('.service-rate'),
                Rate = parseFloat($servRate.val()),
                $servAmt = $(this).find('.service-amt'),
                Amount = parseFloat($servAmt.val());

            if (Name == '') {
                showErrorMsg($servName, 'Material is required!');
                isSuccess = false;
                callback(false);
                return false;
            } else {
                removeErrorMsg($servName);
            }

            if (Id == '') {
                showErrorMsg($servName, 'Material is required!');
                isSuccess = false;
                callback(false);
                return false;
            } else {
                removeErrorMsg($servName);
            }

            if (isNaN(Qty)) {
                showErrorMsg($servQty, 'Quantity is required!');
                isSuccess = false;
                callback(false);
                return false;
            } else {
                removeErrorMsg($servQty);
            }

            if (isNaN(Rate)) {
                showErrorMsg($servRate, 'Rate is required!');
                isSuccess = false;
                callback(false);
                return false;
            } else {
                removeErrorMsg($servRate);
            }

            if (isNaN(Amount)) {
                showErrorMsg($servAmt, 'Amount is required!');
                isSuccess = false;
                callback(false);
                return false;
            } else {
                removeErrorMsg($servAmt);
            }
        });

        callback(isSuccess);
        return isSuccess;
    }

    function calcTotal() {
        var totAmt = 0;
        $serviceWrapper.find('> tr').each(function () {
            var amt = parseFloat($(this).find('.service-amt').val());
            if (!isNaN(amt)) {
                totAmt += amt;
            }
        });

        $totAmt.text(totAmt.toFixed(2));

        $NetAmount.val(totAmt.toFixed(2));
        $GrossAmount.val(totAmt.toFixed(2));

        var serviceCharge = parseFloat($ServiceCharge.val());

        if (!isNaN(serviceCharge)) {
            var qualAmt = (totAmt * serviceCharge) / 100;
            $QualAmount.val(qualAmt.toFixed(2));

            $NetAmount.val((totAmt + qualAmt).toFixed(2));
        }
    }

    function bindCalcRowWiseTotal_onChange() {

        // quantity on change
        $serviceWrapper.on('change', '> tr .service-qty', function () {
            removeErrorMsg($(this));
            calcRowTotal($(this).closest('tr'));
            addServiceRow();
        });

        // rate on change
        $serviceWrapper.on('change', '> tr .service-rate', function () {
            removeErrorMsg($(this));
            calcRowTotal($(this).closest('tr'));
            addServiceRow();
        });

        $serviceWrapper.on('click', '> tr .delete-btn', function (ev) {

            ev.preventDefault();

            if (confirm("Are you want to delete?")) {
                $(this).closest('tr').remove();
                calcTotal();
            }
        });

        function calcRowTotal($tarTr) {
            var qty = parseFloat($tarTr.find('.service-qty').val()),
                rate = parseFloat($tarTr.find('.service-rate').val());

            var amt = '';
            if (!isNaN(qty) && !isNaN(rate)) {
                amt = (qty * rate).toFixed(2);
                if (isNaN(amt)) {
                    amt = '';
                }
            }
            $tarTr.find('.service-amt').val(amt);

            calcTotal();
        }
    }

    // auto complete
    function bindServices_autoComplete() {

        $serviceWrapper.on('focus', '> tr input.service-name', function () {
            var $tarIp = $(this);
            // remove used services
            removeUsedService($tarIp, function (arrServicesCopy) {
                autoComplete($tarIp, arrServicesCopy);
            });

        });

        function removeUsedService($tarIp, callback) {

            var arrServicesCopy = [];
            $.each(arrServices, function (index, service) {
                var isExists = false;
                $serviceWrapper.find('> tr input.service-name').each(function () {
                    if ($tarIp[0] != $(this)[0]
                        && $(this).val().trim().toLowerCase() == service.value.toLowerCase()) {
                        isExists = true;
                        return false;
                    }
                });

                if (isExists === false) {
                    arrServicesCopy.push(service);
                }
            });

            callback(arrServicesCopy);
            return;
        }

        function autoComplete($tarIp, arrServicesCopy) {

            if ($tarIp.hasClass('autocomplete-binded')) {
                $tarIp.autocomplete("destroy");
            }

            var $serviceId = $tarIp.next('.service-id'),
                $tarTr = $tarIp.closest('tr'),
                $serviceRate = $tarTr.find('.service-rate'),
                $serviceUnit = $tarTr.find('.service-unit');
            $tarIp.autocomplete({
                lookup: arrServicesCopy,
                lookupFilter: function (suggestion, originalQuery, queryLowerCase) {
                    if (queryLowerCase == '*') {
                        return suggestion.value;
                    } else {
                        var re = new RegExp($.Autocomplete.utils.escapeRegExChars(queryLowerCase), 'gi');
                        return re.test(suggestion.value);
                    }
                }, onSelect: function (suggestion) {
                    if (suggestion) {
                        $serviceId.val(suggestion.data);

                        var rate = parseFloat(suggestion.Rate).toFixed(2);
                        if (isNaN(rate)) {
                            rate = '';
                        }
                        $serviceRate.val(rate);
                        $serviceUnit.val(suggestion.MUnitName);

                        removeErrorMsg($(this));
                    }
                }, onSearchStart: function (suggestion) {
                    $serviceId.val('');
                }, onSearchComplete: function (query, suggestions) {
                    if (!suggestions.length) {
                        $serviceId.val('');
                        showErrorMsg($(this), 'Service not found!');
                    } else {
                        removeErrorMsg($(this));
                    }
                }
            }).blur(function () {
                var ServiceName = $tarIp.val().trim();
                var $tarTr = $tarIp.closest('tr');

//                    removeErrorMsg($tarIp);

                if (ServiceName.length <= 0) {
                    if ($tarTr.hasClass('empty-row') == false) {
                        $tarTr.addClass('empty-row');
                        $serviceId.val('');
                    }
                } else {
                    $tarTr.removeClass('empty-row');

                    var isExists = false;
                    $serviceWrapper.find('> tr input.service-name').each(function () {
                        if ($tarIp[0] != $(this)[0]
                            && $(this).val().trim().toLowerCase() == ServiceName.toLowerCase()) {
                            isExists = true;
                            return false;
                        }
                    });

                    if (isExists) {
                        showErrorMsg($tarIp, 'Material already exists!');
                        $tarIp.focus();
                    } else {
                        addServiceRow();
                    }
                }
            });

            $tarIp.addClass('autocomplete-binded');
        }
    }

    function showErrorMsg($tarIp, msg) {
        var $tarErrorMsg = $tarIp.closest('.form-group').find('.error_message');
        $tarErrorMsg.find('p').text(msg);
        $tarIp.addClass('error');
        $tarErrorMsg.show();
    }

    function removeErrorMsg($tarIp) {
        var $tarErrorMsg = $tarIp.closest('.form-group').find('.error_message');
        $tarErrorMsg.find('p').text('Please Enter ' + $tarIp.attr('label') + '...');
        $tarIp.removeClass('error');
        $tarErrorMsg.hide();
    }
});
</script>