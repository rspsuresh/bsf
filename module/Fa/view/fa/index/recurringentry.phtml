
<style type="text/css">
    .lbl_move{height:40px !important;}
    .top-20{margin-top:15px;}
    .mar_btm{margin-bottom:30px;}

    .parent_text.error                 				{border:1px solid #D64541!important;color:#333!important;background:#FFEBEB !important;}
    .error + .tooltip > .tooltip-inner				{background: #E74C3C;}
    .error + .tooltip > .tooltip-arrow 				{border-top-color: #E74C3C;}
</style>
<link rel="stylesheet" href="<?php echo $this->basePath() . '/css/mms.css';?>"/>
<div class="content_wrapper">
    <div class="container-fluid">
        <form id="recurringForm" method="post" onsubmit="return entryValidate();">
            <div class="col-lg-12">
                <h1 class="txt_center">Recurring Type Entry</h1>
                <div class="col-lg-3">
                    <div class="form-group col-lg-12"></div>
                </div>
                <div class="col-lg-3 col-lg-offset-6">
                    <div class="form-group col-lg-12"></div>
                </div>
            </div>
            <div class="row" id="divrecurring1">
                <div class="col-lg-12">
                    <div class="col-lg-4 col-lg-offset-4 col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2">
                        <div class="form-group req_flds col-lg-12">
                            <input type="hidden" name="companyId" id="companyId" value="<?php echo (isset($companyId)) ? $companyId : '0';?>">
                            <input type="hidden" name="recurringId" id="recurringId" value="<?php echo (isset($recurringId)) ? $recurringId : '0';?>">
                            <input type="text" name="recurringTypeName" id="recurringTypeName" value="<?php echo (isset($recurringList)) ? $recurringList['RecurringTypeName']:'';?>" style="width:100%;" class="form-control lbl_move" label="Type Name" />
                            <div class="error_message"><p>Type Name is Required</p></div>
                        </div>
                    </div>
                    <div class="col-lg-4 col-lg-offset-4 col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2">
                        <div class="form-group col-lg-12">
                            <select style="width:100%;" class="form-control single_dropdown lbl_box lbl_move sortoption tbl_input changeVal" label="Recurring Type"  name="recurringType" id="recurringType">
                                <option value="S" <?php echo (isset($recurringList) && $recurringList['RecurringType'] =='S') ? 'selected':'';?>>Special</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-4 col-lg-offset-4 col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2">
                        <div class="form-group col-lg-12">
                            <span class="date_icon"><i class="fa fa-calendar"></i></span>
                            <input type="text" name="firstRun" id="firstRun" class="form-control lbl_move datepickerinput" label="First Run on"  value="<?php echo (isset($recurringList)) ? $recurringList['FirstDate']:date('d-m-Y');?>"/>
                        </div>
                    </div>
                    <div class="col-lg-4 col-lg-offset-4 col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2">
                        <div class="form-group col-lg-12">
                            <span class="date_icon"><i class="fa fa-calendar"></i></span>
                            <input type="text" name="lastRun" id="lastRun" class="form-control lbl_move datepickerinput" label="Last Run on"  value="<?php echo (isset($recurringList)) ? $recurringList['LastDate']:date('d-m-Y');?>"/>
                        </div>
                    </div>
                    <div class="col-lg-4 col-lg-offset-4 col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2">
                        <div class="form-group col-lg-12">
                            <div style="float:left;">
                                <input type="text" name="intervalNo" id="intervalNo" value="<?php echo (isset($recurringList)) ? $recurringList['IntervalNos']:'';?>" class="form-control lbl_move" label="Interval" onkeypress="return isNumberKey(event);" />
                            </div>
                            <div style="float:right;">
                                 <select class="form-control single_dropdown sortoption tbl_input changeVal" name="intervalTime" id="intervalTime" onchange="dayOrMonth()">
                                     <option value="M" <?php echo (isset($recurringList) && $recurringList['IntervalType'] =='M') ? 'selected':'';?>>Month</option>
                                     <option value="W" <?php echo (isset($recurringList) && $recurringList['IntervalType'] =='W') ? 'selected':'';?> >Week</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4 col-lg-offset-4 col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2" id="divMonthDay" <?php echo(isset($recurringList) && $recurringList['IntervalType'] =='W')? 'style="display:none;"':'' ?> >
                        <div class="form-group col-lg-12">
                            <input type="text" name="monthDay" id="monthDay" value="<?php echo (isset($recurringList)) ? $recurringList['MonthDay']:'';?>" style="width:100%;" class="form-control lbl_move" onkeypress="return isNumberKey(event);" maxlength="2" label="Run On Day"/>
                        </div>
                    </div>
                    <div class="col-lg-4 col-lg-offset-4 col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2" id="divWeekDay" <?php echo(isset($recurringList) && $recurringList['IntervalType'] =='W')? '':'style="display:none;"' ?>>
                        <div class="form-group col-lg-12">
                            <select class="form-control single_dropdown sortoption tbl_input changeVal" name="weekDay" id="weekDay" style="width:100%;" >
                                <option value="">--Select Week day --</option>
                                <option value="Monday" <?php echo (isset($recurringList) && $recurringList['WeekDay'] =='Monday') ? 'selected':'';?> >Monday</option>
                                <option value="Tuesday" <?php echo (isset($recurringList) && $recurringList['WeekDay'] =='Tuesday') ? 'selected':'';?>>Tuesday</option>
                                <option value="Wednesday" <?php echo (isset($recurringList) && $recurringList['WeekDay'] =='Wednesday') ? 'selected':'';?>>Wednesday</option>
                                <option value="Thursday" <?php echo (isset($recurringList) && $recurringList['WeekDay'] =='Thursday') ? 'selected':'';?>>Thursday</option>
                                <option value="Friday" <?php echo (isset($recurringList) && $recurringList['WeekDay'] =='Friday') ? 'selected':'';?>>Friday</option>
                                <option value="Saturday" <?php echo (isset($recurringList) && $recurringList['WeekDay'] =='Saturday') ? 'selected':'';?>>Saturday</option>
                                <option value="Sunday" <?php echo (isset($recurringList) && $recurringList['WeekDay'] =='Sunday') ? 'selected':'';?>>Sunday</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-4 col-lg-offset-4 col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2">
                        <label class="rt_bx-clr">Recurring Type</label>
                    </div>
                    <div class="col-lg-4 col-lg-offset-4 col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2">
                        <div class="form-group col-lg-12">
                            <div class="radio_check" style="float:right;">
                                <p class="stat_lbl">
                                    <input type="radio" id="autoCheck" value="A" <?php echo (isset($recurringList) && $recurringList['RuningType'] =='A') ? 'checked':'checked';?> name="runningType" >
                                    <label for="autoCheck" class="ripple has-ripple" style="position: relative; overflow: hidden;">Auto<span class="ripple-wrapper animated"></span></label>
                                </p>
                                <p class="stat_lbl">
                                    <input type="radio" id="manualCheck" value="M" <?php echo (isset($recurringList) && $recurringList['RuningType'] =='M') ? 'checked':'';?> name="runningType" >
                                    <label for="manualCheck" class="ripple has-ripple" style="position: relative; overflow: hidden;">Manual<span class="ripple-wrapper animated"></span></label>
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4 col-lg-offset-4 col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2" >
                        <div class="form-group col-lg-12">
                            <select style="width:100%;" class="form-control single_dropdown lbl_box lbl_move sortoption tbl_input changeVal" label="Book Name"  name="bookId" id="bookId">
                                <option value="0"></option>
                                <?php if(isset($bookNames)) {
                                    foreach($bookNames as $books):?>
                                    <option value="<?php echo $books['JournalId'];?>" <?php echo (isset($recurringList) && $recurringList['BookId'] ==$books['JournalId']) ? 'selected':'';?>><?php echo $books['JournalName']?></option>
                                <?php endforeach; } ?>
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-4 col-lg-offset-4 col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2" >
                        <div class="form-group col-lg-12">
                            <textarea class="exp-tex" name="narration" id="narration"><?php echo (isset($recurringList)) ? $recurringList['Narration']:'';?></textarea>
                        </div>
                    </div>
                </div>
                <div class="col-lg-12 savebtn_area">
                    <ul>
                        <li id="continue" class="dropdown save_btn float_r"><a href="javascript:void(0);" onclick="showAccounts()" class="ripple">Next</a></li>
                        <li class="cancel_btn cancel_btn_bluecolor float_r">
                            <a href="<?php echo $this->basePath(); ?>/fa/index/recurringentry" class="ripple has-ripple" style="cursor:pointer;" button type="button" onclick="" id="backRid" class="ripple">Cancel<span class="ripple-wrapper"></span></a></li>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="row" id="divrecurring2" style="display: none;" >
                <div class="col-lg-12">
                    <div class="table-responsive top-20 mar_btm">
                        <table class="table" style=" margin-bottom:0px;">
                            <thead>
                            <tr>
                                <th>Account Head</th>
                                <th>Sub ledger Type</th>
                                <th>Sub ledger Name</th>
                                <th class="ccType">Cost Center</th>
                                <th>Debit</th>
                                <th>Credit</th>
                                <th></th>
                            </tr>
                            </thead>
                            <tbody class="main" id="accountTable">

                            </tbody>
                        </table>
                        <input type="hidden" name="rowid" id="rowid" value="0"/>
                    </div>
                    <div class="clearfix"></div>
                </div>
                <div class="col-lg-12 savebtn_area">
                    <ul>
                        <li id="continue" class="dropdown save_btn float_r"><a href="javascript:void(0);" onclick="submitForm()" class="ripple">Submit</a></li>
                        <li class="cancel_btn cancel_btn_bluecolor float_r">
                            <a onclick="showPrevDiv()" class="ripple has-ripple" style="cursor:pointer;" button type="button" id="backRid" class="ripple">Back<span class="ripple-wrapper"></span></a></li>
                        </li>
                    </ul>
                </div>
            </div>
            <input type="hidden" name="DebitSumAMount" id="DebitSumAMount" value="<?php echo (isset($debitSum)) ? $debitSum : '0';?>">
            <input type="hidden" name="CreditSumAMount" id="CreditSumAMount" value="<?php echo (isset($creditSum)) ? $creditSum : '0';?>">
        </form>
    </div>
</div>

<script id="template-account"  type="text/template" class="hide">
    <tr>
        <td width="21%">
            <input class="parent_text border-none" type="text" id="accountHead__" name="accountHead__" value=""  />
            <input type="hidden" name="accountHeadId__" id="accountHeadId__" value="0">
        </td>
        <td width="18%">
            <input class="parent_text border-none" type="text" id="subLedgerType__" name="subLedgerType__" value=""  />
            <input type="hidden" name="subLedgerTypeId__" id="subLedgerTypeId__" value="0">
        </td>
        <td width="20%">
            <input  class="parent_text border-none"type="text" id="subLedgerName__" name="subLedgerName__" value="" />
            <input type="hidden" name="subLedgerId__" id="subLedgerId__" value="0" />
        </td>
        <td width="18%" class="ccType">
            <input class="parent_text border-none " type="text" id="costCenterName__" name="costCenterName__" value=""  />
            <input type="hidden" name="costCenterId__" id="costCenterId__" value="0">
        </td>
        <td width="10%">
            <input class="parent_text border-none" type="text" id="debit__" name="debit__" onchange="showPayment(this)" onblur="calcCreditDebit()" value="0.00" onkeypress="return isDecimal(event,this)" onblur="return FormatNum(this, 2, true)" style="text-align:right;" />
        </td>
        <td width="10%">
            <input class="parent_text border-none" type="text" id="credit__" name="credit__" onchange="showPayment(this)" onblur="calcCreditDebit()" value="0.00" onkeypress="return isDecimal(event,this)" onblur="return FormatNum(this, 2, true)" style="text-align:right;" />
        </td>
        <td width="3%">
            <a class="DeleteTr__"href="javascript:void(0);" onclick="deleteAccountRow(this, event);" aria-label="remove" style="display: none;" ><i class="fa fa-trash-o" aria-hidden="true"></i></a>
        </td>
    </tr>
</script>
<script type="text/javascript">
    var AccountHead=<?php echo (isset($AccountHead)) ? json_encode($AccountHead) : '[]';?>;
    var ccList=<?php echo (isset($ccList)) ? json_encode($ccList) : '[]';?>;
    var accountList=<?php echo (isset($accountList)) ? json_encode($accountList) : '[]';?>;

    $(".datepickerinput").datepicker({
        format: "dd-mm-yyyy",
        autoclose: true
    });
    $(function () {
        var template = $('#template-account').html();
        var sno= 0;

        if(accountList.length !=0){
            $.each(accountList, function (i,o) {
                sno += 1;
                $('#accountTable').append(template.replace(/__/g, '_' + sno));
                $('#accountHead_'+sno).val(o.AccountName).attr('readonly',true);
                $('#accountHeadId_'+sno).val(o.AccountId);
                $('#subLedgerType_'+sno).val(o.SubLedgerTypeName).attr('readonly',true);
                $('#subLedgerTypeId_'+sno).val(o.SubLedgerTypeId);
                $('#subLedgerName_'+sno).val(o.SubLedgerName).attr('readonly',true);
                $('#subLedgerId_'+sno).val(o.SubLedgerId);
                $('#costCenterName_'+sno).val(o.CostCentreName).attr('readonly',true);
                $('#costCenterId_'+sno).val(o.CostCentreId);
                if(o.TransType == 'D'){
                    $('#debit_'+sno).val(o.Debit);
                } else if(o.TransType == 'C'){
                    $('#credit_'+sno).val(o.Credit);
                }
                $('.DeleteTr_' + sno).show();
                readonlyCreditDebit($('#debit_'+sno))
            });
        }
        sno += 1;
        $('#accountTable').append(template.replace(/__/g, '_' + sno));
        $('#rowid').val(sno);

        bindAccountHeadAutoComplete(AccountHead);
        costCenterAutoComplete(ccList);
    });

    function bindSelect(){
        $(".single_dropdown").select2({
            placeholder: "",
            allowClear: true
        });
    }
    function showAccounts(){
        $('#divrecurring1').fadeOut();
        $('#divrecurring2').fadeIn();
    }
    function showPrevDiv(){
        $('#divrecurring2').fadeOut();
        $('#divrecurring1').fadeIn();
    }

    function entryValidate(){
        if($('.error').length != 0) {
            alert('Kindly notice the error notifications!');
            return false;
        }
    }
    function submitForm(){
        $(".error_message").hide();

        calcCreditDebit();

        var DebitSumAMount=parseInt($("#DebitSumAMount").val());
        var CreditSumAMount=parseInt($("#CreditSumAMount").val());
        var Amount=parseFloatVal(DebitSumAMount) - parseFloatVal(CreditSumAMount);

        bool=true;
        if($.trim($('#recurringTypeName').val()) =='' || $("#recurringTypeName").val().length == 0){
            $("#recurringTypeName").closest(".req_flds").find(".error_message").show();
            $("#recurringTypeName").focus();
            bool=false;
        } /*else if($("#voucherDate").val().length == 0){
            $("#voucherDate").closest(".req_flds").find(".error_message").show();
            $("#voucherDate").focus();
            bool=false;
        } else if($("#specJournalType").val() == 0){
            $("#specJournalType").closest(".req_flds").find(".error_message").show();
            $("#specJournalType").focus();
            bool=false;
        }*/else if(parseInt($('#rowid').val()) == 1){
            alert ("Invalid list");
            bool=false;
        }else if(validRowCheck()=='noAccountHead'){
            alert ("Select Valid Account Head");
            bool=false;
        }else if(validRowCheck()=='noCostCenter'){
            alert('No CostCenter');
            bool=false;
        }else if(validRowCheck()=='noCreditDebit'){
            alert('Debit and Credit Amount cannot be 0');
            bool=false;
        }else if(DebitSumAMount == 0){
            alert ("Debit Sum Cannot be 0");
            bool=false;
        }else if(CreditSumAMount == 0){
            alert ("Credit Sum Cannot be 0");
            bool=false;
        }else if(Amount != 0){
            alert ("Invalid list!");
            bool=false;
        }
        if(bool === true) {
            $('#recurringForm').submit();
        }
    }
    function calcCreditDebit(){
        var rowid=$('#rowid').val();
        var debitTotal=0;
        var creditTotal=0;
        for(var i=1;i<=rowid;i++){
            debitTotal=parseFloatVal(debitTotal)+parseFloatVal($('#debit_'+i).val());
            creditTotal=parseFloatVal(creditTotal)+parseFloatVal($('#credit_'+i).val());
        }
        $('#DebitSumAMount').val(debitTotal);
        $('#CreditSumAMount').val(creditTotal);
    }

    function validRowCheck(){
        var irowcount=$('#rowid').val();
        for(var i=1;i<=irowcount; i++) {
            var AccHeadId = 0,costCenterId=0,debitAmt= 0,creditAmt= 0;
            AccHeadId = $('#accountHeadId_' + i).val();
            costCenterId = parseInt($('#costCenterId_' + i).val());
            debitAmt = parseInt($('#debit_' + i).val());
            creditAmt = parseInt($('#credit_' + i).val());
            if(AccHeadId==0 && (debitAmt!=0 || creditAmt!=0)){
                $('#accountHead_' + i).focus();
                showError($('#accountHead_' + i), "Required");
                return 'noAccountHead';
            }else {
                removeError($('#accountHead_' + i));
            }
            if(AccHeadId !=0 ){
                if(costCenterId ==0 && $('#specJournalTypeChar').val()!='I'){
                    $('#costCenterName_' + i).focus();
                    showError($('#costCenterName_' + i), "Required");
                    return 'noCostCenter';
                } else {
                    removeError($('#costCenterName_' + i));
                }
                if(debitAmt==0 && creditAmt==0){
                    $('#debit_' + i).focus();
                    return 'noCreditDebit';
                }
            }
        }
    }
    function dayOrMonth(){
        $('#monthDay').val('');
        $('#weekDay').val('').select2();
        if($('#intervalTime').val() == 'M'){
            $('#divWeekDay').hide();
            $('#divMonthDay').show();
        }else{
            $('#divMonthDay').hide();
            $('#divWeekDay').show();
        }
    }
    function showPayment(x){
        readonlyCreditDebit(x);
        addNewRow(x);
    }
    function readonlyCreditDebit(x){
        var $x = $(x),
            $tr = $x.closest('tr'),
            key = $x[0].id.split('_')[1];

        $('#debit_' + key).attr('readonly',false);
        $('#credit_' + key).attr('readonly',false);

        if (parseFloatVal($('#debit_' + key).val()) != 0){
            $('#credit_' + key).attr('readonly',true);
        }else if (parseFloatVal($('#credit_' + key).val()) != 0){
            $('#debit_' + key).attr('readonly',true);
        }

    }
    function addNewRow(x) {
        var $x = $(x),
            $tr = $x.closest('tr'),
            key = $x[0].id.split('_')[1];

        if ($tr.next('tr').length != 0)
            return;

        if ($('#debit_' + key).val() == 0 && $('#credit_' + key).val() == 0)
            return;

        var $rowid = $('#rowid'),
            rowid = parseInt($rowid.val());
        $('.DeleteTr_' + rowid).show();
        var count = rowid + 1,
            template = $('#template-account').html();

        template = template.replace(/__/g, '_' + count);
        $tr.parent('tbody').append(template);
        $rowid.val(count);

        bindAccountHeadAutoComplete(AccountHead);
        costCenterAutoComplete(ccList);
    }

    function deleteAccountRow(x,e) {
        e.preventDefault();
        var $x = $(x),
            key = $x[0].className.split('_')[1];

        if (!confirm('Do you want to Delete'))
            return false;

        var $tr = $x.closest('tr'),
            $tbody = $tr.parent('tbody');

        $tr.remove();
        bindAccountHeadAutoComplete(AccountHead);
        costCenterAutoComplete(ccList);
        return false;
    }
    /*divAccount Autocomplete Start*/
    function bindAccountHeadAutoComplete(AccountHead) {
        var $accountHead = $('input[id^=accountHead_]');
        $.each($accountHead, function () {
            var $this = $(this),
                name = $this[0].id;
            if (name.indexOf('__') != -1) return;
            var arrname = name.split('_');
            var key1 = arrname[1];
            $this.unbind('autocomplete');
            $this.autocomplete({
                lookup: AccountHead,
                showNoSuggestionNotice: false,
                lookupFilter: function (suggestion, originalQuery, queryLowerCase) {
                    if (queryLowerCase == '*') {
                        return suggestion.value;
                    } else {
                        var re = new RegExp($.Autocomplete.utils.escapeRegExChars(queryLowerCase), 'gi');
                        return re.test(suggestion.value);
                    }
                }, onSelect: function (suggestion) {
                    if (suggestion) {
                        $(this).prop('readonly',true);
                        $("#accountHeadId_" + key1).val(suggestion.data);
                        $(this).removeClass('error');
                        getSubLedgerType(suggestion.TypeId,$(this));//$(this).attr('id').split('_')[1] //get row id
                        removeError($this);
                    }
                }, onSearchStart: function (suggestion) {
                    $("#accountHeadId_" + key1).val(0);
                }, onSearchComplete: function (query, suggestions) {
                    if (!suggestions.length) {
                        $("#accountHeadId_" + key1).val(0);
                        $(this).addClass('error');
                    } else {
                        $(this).removeClass('error');
                        removeError($this);
                    }
                }
            });
        });
    }
    function getSubLedgerType(TypeId,x){
        var $x=$(x),
            id=$x.attr('id').split('_')[1];

        $.ajax({
            url:"<?php echo $this->basePath(); ?>/fa/index/recurringentry",
            type:"post",
            //async:false,
            data:{'AccountTypeId':TypeId,'type':'getSubLedgerType'},
            success:function(data, textStatus, jqXHR){
                var subLedgerType=JSON.parse(data);
                subLedgerType=subLedgerType['subLedgerType'];

                bindAccountHeadAutoComplete(AccountHead);
                costCenterAutoComplete(ccList);
                bindSLTypeAutoComplete(subLedgerType);
            },
            error:function(jqXHR, textStatus, errorThrown){
            }
        });
    }
    function bindSLTypeAutoComplete(subLedgerType) {
        var $subLedgerType = $('input[id^=subLedgerType_]');
        $.each($subLedgerType, function () {
            var $this = $(this),
                name = $this[0].id;
            if (name.indexOf('__') != -1) return;
            var arrname = name.split('_');
            var key1 = arrname[1];
            $this.unbind('autocomplete');
            $this.autocomplete({
                lookup: subLedgerType,
                showNoSuggestionNotice: false,
                lookupFilter: function (suggestion, originalQuery, queryLowerCase) {
                    if (queryLowerCase == '*') {
                        return suggestion.value;
                    } else {
                        var re = new RegExp($.Autocomplete.utils.escapeRegExChars(queryLowerCase), 'gi');
                        return re.test(suggestion.value);
                    }
                }, onSelect: function (suggestion) {
                    if (suggestion) {
                        $(this).prop('readonly',true);
                        $("#subLedgerTypeId_" + key1).val(suggestion.data);
                        $(this).removeClass('error');
                        getSubLedgerName($(this));
                        removeError($this);
                    }
                }, onSearchStart: function (suggestion) {
                    $("#subLedgerTypeId_" + key1).val(0);
                }, onSearchComplete: function (query, suggestions) {
                    if (!suggestions.length) {
                        $("#subLedgerTypeId_" + key1).val(0);
                        $(this).addClass('error');
                    } else {
                        $(this).removeClass('error');
                        removeError($this);
                    }
                }
            });
        });
    }
    function getSubLedgerName(x){
        var $x=$(x),
            id=$x.attr('id').split('_')[1];

        $.ajax({
            url:"<?php echo $this->basePath(); ?>/fa/index/recurringentry",
            type:"post",
            //async:false,
            data:{'SubLedgerTypeId':$('#subLedgerTypeId_'+id).val(),'type':'getSubLedgerName'},
            success:function(data, textStatus, jqXHR){
                var subLedgerName=JSON.parse(data);
                subLedgerName=subLedgerName['subLedgerName'];
                bindAccountHeadAutoComplete(AccountHead);
                bindSLNameAutoComplete(subLedgerName);
                costCenterAutoComplete(ccList);
            },
            error:function(jqXHR, textStatus, errorThrown){
            }
        });
    }
    function bindSLNameAutoComplete(subLedgerName) {
        var $subLedgerName = $('input[id^=subLedgerName_]');
        $.each($subLedgerName, function () {
            var $this = $(this),
                name = $this[0].id;
            if (name.indexOf('__') != -1) return;
            var arrname = name.split('_');
            var key1 = arrname[1];
            $this.unbind('autocomplete');
            $this.autocomplete({
                lookup: subLedgerName,
                showNoSuggestionNotice: false,
                lookupFilter: function (suggestion, originalQuery, queryLowerCase) {
                    if (queryLowerCase == '*') {
                        return suggestion.value;
                    } else {
                        var re = new RegExp($.Autocomplete.utils.escapeRegExChars(queryLowerCase), 'gi');
                        return re.test(suggestion.value);
                    }
                }, onSelect: function (suggestion) {
                    if (suggestion) {
                        $(this).prop('readonly',true);
                        $("#subLedgerId_" + key1).val(suggestion.data);
                        $(this).removeClass('error');
                        removeError($this);
                    }
                }, onSearchStart: function (suggestion) {
                    $("#subLedgerId_" + key1).val(0);
                }, onSearchComplete: function (query, suggestions) {
                    if (!suggestions.length) {
                        $("#subLedgerId_" + key1).val(0);
                        $(this).addClass('error');
                    } else {
                        $(this).removeClass('error');
                        removeError($this);
                    }
                }
            });
        });
    }
    function costCenterAutoComplete(ccList) {
        var $costCenterName = $('input[id^=costCenterName_]');
        $.each($costCenterName, function () {
            var $this = $(this),
                name = $this[0].id;
            if (name.indexOf('__') != -1) return;
            var arrname = name.split('_');
            var key1 = arrname[1];
            $this.unbind('autocomplete');
            $this.autocomplete({
                lookup: ccList,
                showNoSuggestionNotice: false,
                lookupFilter: function (suggestion, originalQuery, queryLowerCase) {
                    if (queryLowerCase == '*') {
                        return suggestion.value;
                    } else {
                        var re = new RegExp($.Autocomplete.utils.escapeRegExChars(queryLowerCase), 'gi');
                        return re.test(suggestion.value);
                    }
                }, onSelect: function (suggestion) {
                    if (suggestion) {
                        $(this).prop('readonly',true);
                        $("#costCenterId_" + key1).val(suggestion.data);
                        $(this).removeClass('error');
                        removeError($this);
                    }
                }, onSearchStart: function (suggestion) {
                    $("#costCenterId_" + key1).val(0);
                }, onSearchComplete: function (query, suggestions) {
                    if (!suggestions.length) {
                        $("#costCenterId_" + key1).val(0);
                        $(this).addClass('error');
                    } else {
                        $(this).removeClass('error');
                        removeError($this);
                    }
                }
            });
        });
    }
    /*divAccount Autocomplete End*/
</script>