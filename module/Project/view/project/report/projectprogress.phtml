<!--STYLE-->
<link rel="stylesheet" href="<?php echo $this->basePath() . '/css/project.css';?>"/>
<script type="text/javascript" src="<?php echo $this->basePath(); ?>/library/jqwidgets/jqxgrid.aggregates.js"></script>
<script type="text/javascript" src="<?php echo $this->basePath(); ?>/library/amcharts/amcharts.js"></script>
<script type="text/javascript" src="<?php echo $this->basePath(); ?>/library/amcharts/pie.js"></script>
<script type="text/javascript" src="<?php echo $this->basePath(); ?>/library/amcharts/serial.js"></script>
<script type="text/javascript" src="<?php echo $this->basePath(); ?>/library/amcharts/themes/light.js"></script>
<script type="text/javascript" src="<?php echo $this->basePath(); ?>/library/amcharts/themes/dark.js"></script>
<script type="text/javascript" src="<?php echo $this->basePath(); ?>/library/amcharts/raphael-2.1.4.min.js"></script>
<script type="text/javascript" src="<?php echo $this->basePath(); ?>/library/amcharts/justgage.js"></script>
<script type="text/javascript" src="<?php echo $this->basePath(); ?>/library/amcharts/gauge.js"></script>


<script type="text/javascript" src="<?php echo $this->basePath(); ?>/library/Highcharts-4.2.3/js/highcharts.js"></script>
<script type="text/javascript" src="<?php echo $this->basePath(); ?>/library/Highcharts-4.2.3/js/highcharts-more.js"></script>
<script type="text/javascript" src="<?php echo $this->basePath(); ?>/library/Highcharts-4.2.3/js/modules/exporting.js"></script>
<script type="text/javascript" src="<?php echo $this->basePath(); ?>/library/Highcharts-4.2.3/js/solid-gauge.js"></script>


<style>
.top_ct 	            {background:#fff;padding:5px 0;margin:0}
#scdule-db1,#chartdiv1,#chartdiv2, #chartdiv3 {width:100%;height:300px !important;font-size:11px;}
.panel-body             {border:1px solid #e7e7e7;box-shadow:0 1px 0 rgba(0, 0, 0, 0.12), 0 1px 1px rgba(0, 0, 0, 0.24);padding:0 !important}
.panel-heading          {border-top-left-radius:3px;border-top-right-radius:3px;color:#123A7A;font-size:20px;padding:10px 15px;transition: margin 0.5s ease-out 0s; background:-moz-linear-gradient(center top , #eeeeee 0%, #dddddd 100%); background: linear-gradient(center top , #eeeeee 0%, #dddddd 100%);background:-webkit-linear-gradient(center top , #eeeeee 0%, #dddddd 100%); border-color: #cccccc #cccccc #999999;border-style: solid; border-width: 1px 1px 1px 1px;}
.wave-spread .loader 			{height:25px;width:62px;}
.wave-spread .loader > div 		{float:left;margin:0% 2% 0 0;width:5%;height:45%;background-color:#000; -webkit-animation: wave 1s cubic-bezier(0.85, 0.25, 0.37, 0.85) infinite;animation: wave 1s cubic-bezier(0.85, 0.25, 0.37, 0.85) infinite;}
.wave-spread .loader .line-1, .wave-spread .loader .line-5 {-webkit-animation-delay: .4s; animation-delay: .4s;}
.wave-spread .loader .line-2, .wave-spread .loader .line-4 { -webkit-animation-delay: .2s; animation-delay: .2s;}
.loader-container 				{position:relative;float:left;width:25px;height:29px;margin-top:5px;}
.loader-container .loader 		{position:absolute;top:2px;left: 0;}
 @-webkit-keyframes wave 						   {
 0%, 100% {
 -webkit-transform: scaleY(1);
 transform: scaleY(1);
}
 50% {
 -webkit-transform: scaleY(2);
 transform: scaleY(2);
}
}
 @keyframes wave {
 0%, 100% {
 -webkit-transform: scaleY(1);
 transform: scaleY(1);
}
 50% {
 -webkit-transform: scaleY(2);
 transform: scaleY(2);
}
}
.highcharts-title,.highcharts-button{display:none}
</style>
<!--content-->

<div class="content_wrapper padlr0">
  <div class="container-fluid padlr0">
    <div class="col-lg-12">
      <h1 class="col-lg-6 col-lg-offset-0 col-md-6 col-md-offset-0 col-sm-6 col-sm-offset-0">Project Progress</h1>
      <div class="col-lg-6 col-lg-offset-0 col-md-6 col-md-offset-0 col-sm-6 col-sm-offset-0" style="margin-bottom:10px; padding-right:0px !important;">
        <label class="col-lg-6 col-lg-offset-0 col-md-6 col-md-offset-0 col-sm-6 col-sm-offset-0 control-label text-right">Select by</label>
        <div class="col-lg-6 col-lg-offset-0 col-md-6 col-md-offset-0 col-sm-6 col-sm-offset-0" style="padding-right:0px !important;">
          <select name="projectId" id="projectId" class="form-control multiple_dropdown lbl_move" onchange="return ChangeProject()" data-size="6" title="Select Project..." style="width:100%;">
            <option value="0">None</option>
            <?php if(isset($projectlists)):?>
            <?php foreach ( $projectlists as $project ):?>
            <option value="<?php echo $project['ProjectId'];?>"<?php echo ($project['ProjectId'] == $projectId) ? 'selected' : '';?>><?php echo $project[ 'ProjectName' ];?></option>
            <?php endforeach; ?>
            <?php  endif; ?>
          </select>
        </div>
        
        <!--Short by end--> 
      </div>
      <div class="col-lg-12">
        <div class="col-md-4">
          <section class="panel">
            <header class="panel-heading">
              <div class="loader-container wave-spread">
                <div class="loader">
                  <div class="line-1" style="background:#e30472"></div>
                  <div class="line-2" style="background:#0035fc"></div>
                  <div class="line-3" style="background:#045904"></div>
                  <div class="line-4" style="background:#FC5A03"></div>
                </div>
              </div>
              Current Status</header>
            <div class="panel-body">
              <div class="col-lg-10">
                <div id="chartdiv1">
                   <div id="container-speed" style="width:100%; height: 300px;"></div>
                </div>
              </div>
            </div>
          </section>
        </div>
        <div class="col-md-4">
          <section class="panel">
            <header class="panel-heading">
              <div class="loader-container wave-spread">
                <div class="loader">
                  <div class="line-1" style="background:#e30472"></div>
                  <div class="line-2" style="background:#0035fc"></div>
                  <div class="line-3" style="background:#045904"></div>
                  <div class="line-4" style="background:#FC5A03"></div>
                </div>
              </div>
              Current Progress</header>
            <div class="panel-body">
              <div class="col-md-9 col-md-offset-1">
                <div id="chartdiv2" class="top_ct"></div>
              </div>
            </div>
          </section>
        </div>
        <div class="col-md-4">
          <section class="panel">
            <header class="panel-heading">
              <div class="loader-container wave-spread">
                <div class="loader">
                  <div class="line-1" style="background:#e30472"></div>
                  <div class="line-2" style="background:#0035fc"></div>
                  <div class="line-3" style="background:#045904"></div>
                  <div class="line-4" style="background:#FC5A03"></div>
                </div>
              </div>
              Required Progress</header>
            <div class="panel-body">
              <div class="col-md-8 col-md-offset-2">
                <div id="chartdiv3" class="top_ct"></div>
              </div>
            </div>
          </section>
        </div>
      </div>
      
      <!--chart2 start-->
      <div class="col-lg-12 divdash">
        <section class="panel">
          <header class="panel-heading">
            <div class="loader-container wave-spread">
              <div class="loader">
                <div class="line-1" style="background:#e30472"></div>
                <div class="line-2" style="background:#0035fc"></div>
                <div class="line-3" style="background:#045904"></div>
                <div class="line-4" style="background:#FC5A03"></div>
              </div>
            </div>
            Month wise Project Progress</header>
          <div class="panel-body">
            <div id="scdule-db1" class="top_ct"></div>
          </div>
        </section>
      </div>
      
      <!--chart3complete-->
      <div class="col-lg-12 divdash">
        <section class="panel">
          <header class="panel-heading">
            <div class="loader-container wave-spread">
              <div class="loader">
                <div class="line-1" style="background:#e30472"></div>
                <div class="line-2" style="background:#0035fc"></div>
                <div class="line-3" style="background:#045904"></div>
                <div class="line-4" style="background:#FC5A03"></div>
              </div>
            </div>
            Monthly Project Progress Data</header>
          <div class="panel-body">
            <div class="table-responsive clear">
              <div id="dataTable"></div>
            </div>
          </div>
        </section>
      </div>
    </div>
  </div>
</div>
<div class="col-lg-12">
<a  data-text="Go to Report List" href="<?php echo $this->basePath(); ?>/project/report/reportlist" class="gobacklist"><i class="fa fa-chevron-circle-left" aria-hidden="true"></i> Go to Report List</a></div> 
<!--datepicker--> 

<script>

    var shcomp = <?php echo json_encode($shcomp); ?>;

    $(function () {
        if (shcomp.length ==0) $('.divdash').hide();
        else $('.divdash').show();
    });

    function ChangeProject() {
        var iProjectId = isNullCheck($('#projectId').val(),'number');
        window.location.href = getBaseURL() + "project/report/projectprogress/" + iProjectId;
    }

    $dataGrid = $("#dataTable"),
        $(function () {
            var source = {
                localdata:shcomp,
                dataType: "json",
                dataFields: [
                    { name: 'Mon', type: 'number' },
                    { name: 'Mondata', type: 'string' },
                    { name: 'ShAmount', type: 'number' },
                    { name: 'CompAmount', type: 'number' }
                ],
                id: 'Mon'
            };

            var dataAdapter = new $.jqx.dataAdapter(source);
            $("#dataTable").jqxGrid({
                width: '100%',
                pageable: true,
                rowsheight: 35,
                filterable: true,
                showfilterrow: true,
                selectionMode: 'singleRow',
                pagerButtonsCount: 6,
                autoheight:true,
                source: dataAdapter,
                altrows: true,
                editable:true,
                enabletooltips: true,
                selectionmode: 'singlerow',
                editmode: 'selectedcell',
                columns: [
                    { text: 'Mon', datafield: 'Mon', hidden: true},
                    { text: 'Month', dataField: 'Mondata',width:'40%',editable:false},
                    { text: 'Schedule Amount', dataField: 'ShAmount',editable:false, width:'30%',
                        cellsrenderer: function (row) {
                            return '<div class="text-right">' + sanitizeNumber($dataGrid.jqxGrid('getCellValue', row, 'ShAmount'),2,true) + '</div>';
                        }},
                    { text: 'Completion Amount', dataField: 'CompAmount', editable:false, align: 'right', cellsalign: 'right', width:'30%',
                        cellsrenderer: function (row) {
                            return '<div class="text-right">' + sanitizeNumber($dataGrid.jqxGrid('getCellValue', row, 'CompAmount'),2,true) + '</div>';
                        }}
                ]
            });
        });

//chart1
var gaugeOptions = {

    chart: {
        type: 'solidgauge'
    },

    title: null,

    pane: {
        center: ['50%', '85%'],
        size: '140%',
        startAngle: -90,
        endAngle: 90,
        background: {
            backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || '#EEE',
            innerRadius: '60%',
            outerRadius: '100%',
            shape: 'arc'
        }
    },

    tooltip: {
        enabled: false
    },

    // the value axis
    yAxis: {
        stops: [
            [0.1, '#55BF3B'], // green
            [0.5, '#DDDF0D'], // yellow
            [0.9, '#DF5353'] // red
        ],
        lineWidth: 0,
        minorTickInterval: null,
        tickAmount: 2,
        title: {
            y: -70
        },
        labels: {
            y: 16
        }
    },

    plotOptions: {
        solidgauge: {
            dataLabels: {
                y: 5,
                borderWidth: 0,
                useHTML: true
            }
        }
    }
};

// The speed gauge
var chartSpeed = Highcharts.chart('container-speed', Highcharts.merge(gaugeOptions, {
    yAxis: {
        min: 0,
        max: 200,
        title: {
            text: 'Speed'
        }
    },

    credits: {
        enabled: false
    },

    series: [{
        name: 'Speed',
        data: [80],
        dataLabels: {
            format: '<div style="text-align:center"><span style="font-size:25px;color:' +
                ((Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black') + '">{y}</span><br/>' +
                   '<span style="font-size:12px;color:silver">km/h</span></div>'
        },
        tooltip: {
            valueSuffix: ' km/h'
        }
    }]

}));

// The RPM gauge
var chartRpm = Highcharts.chart('container-rpm', Highcharts.merge(gaugeOptions, {
    yAxis: {
        min: 0,
        max: 5,
        title: {
            text: 'RPM'
        }
    },

    series: [{
        name: 'RPM',
        data: [1],
        dataLabels: {
            format: '<div style="text-align:center"><span style="font-size:25px;color:' +
                ((Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black') + '">{y:.1f}</span><br/>' +
                   '<span style="font-size:12px;color:silver">* 1000 / min</span></div>'
        },
        tooltip: {
            valueSuffix: ' revolutions/min'
        }
    }]

}));

// Bring life to the dials
setInterval(function () {
    // Speed
    var point,
        newVal,
        inc;

    if (chartSpeed) {
        point = chartSpeed.series[0].points[0];
        inc = Math.round((Math.random() - 0.5) * 100);
        newVal = point.y + inc;

        if (newVal < 0 || newVal > 200) {
            newVal = point.y - inc;
        }

        point.update(newVal);
    }

    // RPM
    if (chartRpm) {
        point = chartRpm.series[0].points[0];
        inc = Math.random() - 0.5;
        newVal = point.y + inc;

        if (newVal < 0 || newVal > 5) {
            newVal = point.y - inc;
        }

        point.update(newVal);
    }
}, 2000);



//    setInterval(randomValue, 2000);
//
//    // set random value
//    function randomValue() {
//        var value = Math.round(Math.random() * 100);
//        chart.arrows[0].setValue(value);
//        chart.axes[0].setTopText(value + " %");
//        // adjust darker band to new value
//        chart.axes[0].bands[1].setEndValue(value);
//    }
</script>
<script>
var gaugeChart = AmCharts.makeChart( "chartdiv2", {
  "type": "gauge",
  "theme": "light",
  "axes": [ {
    "axisThickness": 1,
    "axisAlpha": 0.2,
    "tickAlpha": 0.2,
    "valueInterval": 20,
    "bands": [ {
      "color": "#84b761",
      "endValue": 90,
      "startValue": 0
    }, {
      "color": "#fdd400",
      "endValue": 130,
      "startValue": 90
    }, {
      "color": "#cc4748",
      "endValue": 220,
      "innerRadius": "95%",
      "startValue": 130
    } ],
    "bottomText": "0 km/h",
    "bottomTextYOffset": -20,
    "endValue": 220
  } ],
  "arrows": [ {} ],
  "export": {
    "enabled": true
  }
} );

setInterval( randomValue, 2000 );

// set random value
function randomValue() {
  var value = Math.round( Math.random() * 200 );
  if ( gaugeChart ) {
    if ( gaugeChart.arrows ) {
      if ( gaugeChart.arrows[ 0 ] ) {
        if ( gaugeChart.arrows[ 0 ].setValue ) {
          gaugeChart.arrows[ 0 ].setValue( value );
          gaugeChart.axes[ 0 ].setBottomText( value + " km/h" );
        }
      }
    }
  }
}
</script>
<script>
  
//    setInterval( randomValue, 2000 );
//
//    // set random value
//    function randomValue() {
//        var value = Math.round( Math.random() * 200 );
//        if ( gaugeChart ) {
//            if ( gaugeChart.arrows ) {
//                if ( gaugeChart.arrows[ 0 ] ) {
//                    if ( gaugeChart.arrows[ 0 ].setValue ) {
//                        gaugeChart.arrows[ 0 ].setValue( value );
//                        gaugeChart.axes[ 0 ].setBottomText( value + " km/h" );
//                    }
//                }
//            }
//        }
//    }

    // set random value
    //function randomValue() {
       // var value = Math.round( Math.random() * 200 );
       // if ( gaugeChart ) {
          //  if ( gaugeChart.arrows ) {
              //  if ( gaugeChart.arrows[ 0 ] ) {
                   // if ( gaugeChart.arrows[ 0 ].setValue ) {
                    //    gaugeChart.arrows[ 0 ].setValue( value );
                     //   gaugeChart.axes[ 0 ].setBottomText( value + " km/h" );
                  // }
              //  }
          //  }
       // }
  //  }

    var chart = AmCharts.makeChart("scdule-db1", {
        "theme": "light",
        "type": "serial",
        "dataProvider": shcomp,
        "valueAxes": [{
            "position": "left",
            "title": "Cost"
        }],

        "startDuration": 1,
        "graphs": [{
            "balloonText": "Schedule Cost in [[Mondata]]: <b>[[value]]</b>",
            "fillAlphas": 0.9,
            "lineAlpha": 0.2,
            "title": "Schedule",
            "type": "column",
            "valueField": "ShAmount"
        }, {
            "balloonText": "Completion Cost in [[Mondata]]: <b>[[value]]</b>",
            "fillAlphas": 0.9,
            "lineAlpha": 0.2,
            "title": "Completion",
            "type": "column",
            "clustered":false,
            "columnWidth":0.5,
            "valueField": "CompAmount"
        }],
        "plotAreaFillAlphas": 0.1,
        "categoryField": "Mondata",
        "categoryAxis": {
            "gridPosition": "start"
        },
        "export": {
            "enabled": true
        }

    });
</script> 
<script>
    Highcharts.chart('chartdiv3', {

    chart: {
        type: 'gauge',
        alignTicks: false,
        plotBackgroundColor: null,
        plotBackgroundImage: null,
        plotBorderWidth: 0,
        plotShadow: false
    },

    title: {
        text: 'Speedometer with dual axes'
    },

    pane: {
        startAngle: -150,
        endAngle: 150
    },

    yAxis: [{
        min: 0,
        max: 200,
        lineColor: '#339',
        tickColor: '#339',
        minorTickColor: '#339',
        offset: -25,
        lineWidth: 2,
        labels: {
            distance: -20,
            rotation: 'auto'
        },
        tickLength: 5,
        minorTickLength: 5,
        endOnTick: false
    }, {
        min: 0,
        max: 124,
        tickPosition: 'outside',
        lineColor: '#933',
        lineWidth: 2,
        minorTickPosition: 'outside',
        tickColor: '#933',
        minorTickColor: '#933',
        tickLength: 5,
        minorTickLength: 5,
        labels: {
            distance: 12,
            rotation: 'auto'
        },
        offset: -20,
        endOnTick: false
    }],

    series: [{
        name: 'Speed',
        data: [80],
        dataLabels: {
            formatter: function () {
                var kmh = this.y,
                    mph = Math.round(kmh * 0.621);
                return '<span style="color:#339">' + kmh + ' km/h</span><br/>' +
                    '<span style="color:#933">' + mph + ' mph</span>';
            },
            backgroundColor: {
                linearGradient: {
                    x1: 0,
                    y1: 0,
                    x2: 0,
                    y2: 1
                },
                stops: [
                    [0, '#DDD'],
                    [1, '#FFF']
                ]
            }
        },
        tooltip: {
            valueSuffix: ' km/h'
        }
    }]

},
    // Add some life
    function (chart) {
        setInterval(function () {
            if (chart.axes) { // not destroyed
                var point = chart.series[0].points[0],
                    newVal,
                    inc = Math.round((Math.random() - 0.5) * 20);

                newVal = point.y + inc;
                if (newVal < 0 || newVal > 200) {
                    newVal = point.y - inc;
                }

                point.update(newVal);
            }
        }, 3000);

    });
</script>
<script>
//    var gaugeChart = AmCharts.makeChart( "scdule-db2", {
//        "type": "gauge",
//        "theme": "light",
//        "axes": [ {
//            "axisThickness": 1,
//            "axisAlpha": 0.2,
//            "tickAlpha": 0.2,
//            "valueInterval": 20,
//            "bands": [ {
//                "color": "#84b761",
//                "endValue": 90,
//                "startValue": 0
//            }, {
//                "color": "#fdd400",
//                "endValue": 130,
//                "startValue": 90
//            }, {
//                "color": "#cc4748",
//                "endValue": 220,
//                "innerRadius": "95%",
//                "startValue": 130
//            } ],
//            "bottomText": "0 km/h",
//            "bottomTextYOffset": -20,
//            "endValue": 220
//        } ],
//        "arrows": [ {} ],
//        "export": {
//            "enabled": true
//        }
//    } );


</script> 
<script>
//    var g1, g2, g3;
//
//    document.addEventListener("DOMContentLoaded", function(event) {
//        g1 = new JustGage({
//            id: "g1",
//            value: getRandomInt(350, 980),
//            min: 350,
//            max: 980,
//            title: "Lone Ranger",
//            label: "miles traveled"
//        });
//
//        g2 = new JustGage({
//            id: "g2",
//            value: 32,
//            min: 50,
//            max: 100,
//            title: "Empty Tank",
//            label: ""
//        });
//
//        g3 = new JustGage({
//            id: "g3",
//            value: 120,
//            min: 50,
//            max: 100,
//            title: "Meltdown",
//            label: ""
//        });
//
//        setInterval(function() {
//            g1.refresh(getRandomInt(350, 980));
//            g2.refresh(getRandomInt(0, 49));
//            g3.refresh(getRandomInt(101, 200));
//        }, 2500);
//    });
    </script> 
<!--<script>-->
<!--    $(function () {-->
<!--        $('#scdule-db4').highcharts({-->
<!---->
<!--                chart: {-->
<!--                    type: 'gauge',-->
<!--                    alignTicks: false,-->
<!--                    plotBackgroundColor: false,-->
<!--                    plotBackgroundImage: false,-->
<!--                    plotBorderWidth: 0,-->
<!--                    plotShadow: false-->
<!--                },-->
<!---->
<!--                title: {-->
<!--                    text: '',-->
<!--                    style: {-->
<!--                        display: 'none'-->
<!--                    }-->
<!--                },-->
<!---->
<!--                pane: {-->
<!--                    startAngle: -150,-->
<!--                    endAngle: 150-->
<!--                },-->
<!---->
<!--                yAxis: [{-->
<!--                    min: 0,-->
<!--                    max: 200,-->
<!--                    lineColor: '#339',-->
<!--                    tickColor: '#339',-->
<!--                    minorTickColor: '#339',-->
<!--                    offset: -25,-->
<!--                    lineWidth: 2,-->
<!--                    labels: {-->
<!--                        distance: -20,-->
<!--                        rotation: 'auto'-->
<!--                    },-->
<!--                    tickLength: 5,-->
<!--                    minorTickLength: 5,-->
<!--                    endOnTick: false-->
<!--                }, {-->
<!--                    min: 0,-->
<!--                    max: 124,-->
<!--                    tickPosition: 'outside',-->
<!--                    lineColor: '#933',-->
<!--                    lineWidth: 2,-->
<!--                    minorTickPosition: 'outside',-->
<!--                    tickColor: '#933',-->
<!--                    minorTickColor: '#933',-->
<!--                    tickLength: 5,-->
<!--                    minorTickLength: 5,-->
<!--                    labels: {-->
<!--                        distance: 12,-->
<!--                        rotation: 'auto'-->
<!--                    },-->
<!--                    offset: -20,-->
<!--                    endOnTick: false-->
<!--                }],-->
<!---->
<!--                series: [{-->
<!--                    name: 'Speed',-->
<!--                    data: [80],-->
<!--                    dataLabels: {-->
<!--                        formatter: function () {-->
<!--                            var kmh = this.y,-->
<!--                                mph = Math.round(kmh * 0.621);-->
<!--                            return '<span style="color:#339">' + kmh + ' km/h</span><br/>' +-->
<!--                            '<span style="color:#933">' + mph + ' mph</span>';-->
<!--                        },-->
<!--                        backgroundColor: {-->
<!--                            linearGradient: {-->
<!--                                x1: 0,-->
<!--                                y1: 0,-->
<!--                                x2: 0,-->
<!--                                y2: 1-->
<!--                            },-->
<!--                            stops: [-->
<!--                                [0, '#DDD'],-->
<!--                                [1, '#FFF']-->
<!--                            ]-->
<!--                        }-->
<!--                    },-->
<!--                    tooltip: {-->
<!--                        valueSuffix: ' km/h'-->
<!--                    }-->
<!--                }]-->
<!---->
<!--            },-->
<!--            // Add some life-->
<!--            function (chart) {-->
<!--                setInterval(function () {-->
<!--                    var point = chart.series[0].points[0],-->
<!--                        newVal,-->
<!--                        inc = Math.round((Math.random() - 0.5) * 20);-->
<!---->
<!--                    newVal = point.y + inc;-->
<!--                    if (newVal < 0 || newVal > 200) {-->
<!--                        newVal = point.y - inc;-->
<!--                    }-->
<!---->
<!--                    point.update(newVal);-->
<!---->
<!--                }, 3000);-->
<!---->
<!--            });-->
<!--    });-->
<!---->
<!--</script>-->