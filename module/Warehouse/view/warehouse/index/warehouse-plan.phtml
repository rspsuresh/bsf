<style>
#dataTable tbody tr.mainTr td{
	text-align: center;
}
</style>
<div class="content_wrapper padlr0">
	<div class="container-fluid">
		<div class="col-lg-12 clear">
			<form class="form-horizontal" method="post" id="sampleForm">
				<input type="hidden" name="warehouseId" id="warehouseId" value="<?php  echo $warehouseId; ?>">
				<div class="row" id="firstStep">
                	<h1 class="txt_center commargin_top">WareHouse Creation</h1>
                	<div class="webeleware col-lg-4 col-lg-offset-4 col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2 commargin_top_70">
                    	<p class="txt_center webelewaretxt">Creating WareHouse Plan</p>
                        <div class="webelewarepra compadding commargin_top_45">
                        	<div class="row">
								<div class="form-group req_flds col-lg-12">
                                	<div class="radio_check techradio_checkpostnplan">
                                        <p style="padding-left:16px; background:#d5e7fb;">
                                           <input type="checkbox" name="storagesectionFound" id="storagesectionFound"/>
                                           <label for="storagesectionFound" class="ripple">Do you have multi no. of storage section ?</label>
                                       </p>
									</div>
								</div>
							</div>
							<div class="row commargin_top" id="storagesection">
								<div class="form-group req_flds col-lg-12">
									<input type="text" name="noofstoragesection" id="noofstoragesection" class="form-control lbl_move" label="No. of storage section">
									<div class="error_message" style="display:none;"><p>Please enter VoucherNo...</p> </div> 
								</div>
							</div>
                        </div>	
                    </div>
				</div>
				<div class="row" id="secondStep">
					<h1 class="txt_center">Creating section in WareHouse</h1>
					<div class="form-group">
						<div class="col-lg-12">
							<div class="row">
								<div class="form-group req_flds col-lg-12">
									<table class="table table-bordered tableView" id="dataTable">
										<thead>
											<tr>
												<th>Section name</th>
											</tr>	
										</thead>
										<tbody>
										</tbody>
									</table>
									<div id="subContent" style="display:none;">
									</div>
								</div>
							</div>
						</div>	
					</div>	
				</div>
				<div class="row" id="thirdStep">
					<h1 class="txt_center form_main_h1 frmwrk_h1">Creating section in WareHouse</h1>
						<div class="col-lg-12">
							<div class="form-group req_flds ">
								<div id="treeGrid">
								</div>
							</div>
						</div>
				</div>
			</form>
		</div>
	</div>	
</div>		

<div class="col-lg-12 savebtn_area">
    <ul>
        <li id="continueButton" class="dropdown save_btn float_r">
            <a href="javascript:void(0);" class="ripple">Continue</a>
        </li>
        <li id="backButton" class="cancel_btn float_r" style="display:none;"><a href="javascript:void(0);" class="ripple">back</a></li>
		<li class="cancel_btn cancel_btn_bluecolor float_l"><a id="cancelbutton" class="ripple" onclick="alert confirm();">cancel</a></li>
    </ul>
</div>
<?php 
	echo $this->inlineScript()->appendFile($this->basePath('/js/warehouse.js'));
?>
<script>

var counter = 1;
var btreeFound=0;
var emp_row = [<?php echo json_encode($warehouseResult); ?>],
	arr_employees = [];
	arr_empl=[];
var totCount = 0;	
$('#secondStep').hide();
$('#thirdStep').hide();

var json = [];
var displayView = function (records) {
	for (var i = 0; i < records.length; i++) {
		var o = {};
		for(var tot in records[i]){
			if(tot != 'level' && tot != 'records' && tot != 'parent' && tot != '_visible'){
				o[tot] = records[i][tot];
			}
		}
		json.push(o);
		if(records[i].records){
			displayView(records[i].records);
		}
	}
};
$("#continueButton").click(function(){
	if($("#firstStep").is(":visible")){
		bool=false;
		if($("#noofstoragesection").val() == 0 && $('#storagesectionFound').prop('checked')){
			//$("#warehouseNo").closest(".req_flds").children(".error_message").show().find("p").text("Enter warehouse No...");
			alert("Enter No.of Storagesection ...");
			$("#noofstoragesection").focus();
			bool=false;
		}
		else{
			fillSection();
			$("#backButton").show();
			$('#firstStep').hide();
			$('#secondStep').show();
			oTable.$("tr.mainTr").trigger("click");			
		}
					
	}
	else if($("#secondStep").is(":visible")){
		bool=false;
		if($("#noofstoragesection").val() == "0"){
			//$("#warehouseNo").closest(".req_flds").children(".error_message").show().find("p").text("Enter warehouse No...");
			alert("Enter noofstoragesection ...");
			$("#noofstoragesection").focus();
			bool=false;
		} else {
			$("#backButton").show();
			$('#secondStep').hide();
			$('#thirdStep').show();
			filltreeArray();	
		}
	}
	else if($("#thirdStep").is(":visible")){
		var view = $("#treeGrid").jqxTreeGrid('getView');
		json = [];
		displayView(view); 
		$frmPost = $('#sampleForm');
		$frmPost.on('submit', function () {
			$frmPost.append("<input type='text' name='warehouseJson' value='"+JSON.stringify(json)+"'>");
		});
		
		$("#sampleForm").submit();
	}
});
$("#backButton").click(function(){
	if($("#secondStep").is(":visible")){
		$('#secondStep').hide();
		$("#backButton").hide();
		$('#firstStep').show();
		$("#continue").val("Continue");
	}
	else if($("#thirdStep").is(":visible")){
		$('#thirdStep').hide();
		$("#backButton").show();
		$('#secondStep').show();
		$("#continue").val("Continue");
	}
});

$('#storagesection').hide(); 
$('#storagesectionFound').click(function(){
var status = this.checked;
if(status == true) {
$('#storagesection').show();
}
else{
$('#storagesection').hide();
}
});	
  
function filltreeArray(){
	var txtCount= parseInt($("#noofstoragesection").val()),
		newRows = [];
		var count=1;
	for(var i = 1; i<=txtCount; i++) {
		var txtCountRack=$('#countRack_' + i).val();
		var txtCountBulk=$('#countBulk_' + i).val();
		var txtCountOpen=$('#countOpen_' + i).val();
		count++;
		var parentId = count;
		newRows.push({
			"Id": count,
			"Name": $('#sectionName_' + i).val(),
			"TypeId": 1,
			"Type": "Section",
			"ParentID": 1,
			"Length" : $('#sectionLength_' + i).val(),
			"Breadth" : $('#sectionBreadth_' + i).val(),
			"Height" : $('#sectionArea_' + i).val(),
			"Capacity" : 0
		});
		
		console.log($('#sectionName_'+i).val())
		
		for(var j = 1; j<=txtCountRack; j++) {
			count++;
			newRows.push({
				"Id": count,
				"Name": 'Rack' + j,
				"TypeId": 2,
				"Type": "Rack",
				"ParentID": parentId,
				"Length" : 0,
				"Breadth" : 0,
				"Height" : 0,
				"Capacity" : 0
			});
		}
		
		for(var k = 1; k<=txtCountBulk; k++) {
			count++;
			newRows.push({
				"Id": count,
				"Name": 'Bulk' + k,
				"TypeId": 3,
				"Type": "Bulk",
				"ParentID": parentId,
				"Length" : 0,
				"Breadth" : 0,
				"Height" : 0,
				"Capacity" : 0
			});
		}
		
		for(var l = 1; l<=txtCountOpen; l++) {
			count++;
			newRows.push({
				"Id": count,
				"Name": 'Open' + l,
				"TypeId": 4,
				"Type": "Open",
				"ParentID": parentId,
				"Length" : 0,
				"Breadth" : 0,
				"Height" : 0,
				"Capacity" : 0
			});
		}
	};
	arr_employees = emp_row.concat(newRows);
	renderData();
}

var oTable = $("#dataTable").dataTable({"aLengthMenu": [[1, 5, 10], [1, 5, 10]], "order": [],
	"initComplete": function(settings, json) {
		$("select[name=dataTable_length]").addClass("show-tick").selectpicker();
	},	
	"drawCallback": function( settings ){
		//alert($(this).find(".datepickerinput").attr("class"))
		$(this).find("tr").trigger('click');
	}	
});	
function changePage(){
	$('.duplicateTr').find('input:text').unbind();
	$('.duplicateTr').find('input:text').bind('blur', function(){
		var name = $(this).attr('name');
		$('#subContent input[name='+name+']').val($(this).val());
		$('#subContent input[name='+name+']').attr('value', $(this).val());
	});
	
	$('.sample').unbind();
	$('.sample').bind('click', function(){
		var id = $(this).closest('.commargin_top').next('div').attr('id');
		var name = $(this).attr('name');
		//console.log(name)
		if($(this).is(':checked')){
			$(this).closest('.commargin_top').next('div').show();
			$('#subContent input[name='+name+']').attr('checked', true);
			$('#subContent #'+id).show();
		}
		else{
			$(this).closest('.commargin_top').next('div').hide();
			$('#subContent input[name='+name+']').attr('checked', false);
			$('#subContent #'+id).hide();
		}
		
	});	
}
function trClick(){
	oTable.$("tr").unbind();
	oTable.$("tr").bind('click', function(){
		if(!($(this).next("tr").hasClass("duplicateTr"))){
			$(this).after("<tr class='duplicateTr'><td class='warehousetd'>"+$("#step_"+$(this).attr("id")).html()+"</td></tr>");
			changePage();
		}
	});	
}
trClick();
/*
var oTable = $("#dataTable").dataTable({"aLengthMenu": [[1, 5, 10], [1, 5, 10]], "order": [],
	"initComplete": function(settings, json) {
		$("select[name=dataTable_length]").addClass("show-tick").selectpicker();
	},	
	"drawCallback": function( settings ){
		//alert($(this).find(".datepickerinput").attr("class"))
		$(this).find('tr.mainTr').find('td.quanTr').trigger('click');
	}	
}); this is hide and show below*/
function fillrackHideShow(x){
	var $x = $(x),
		key = $x[0].id.split('_')[1];
		//console.log('countRack_'+key);
	if($(x).is(':checked')) {
		//$('#countracksFound'+key).show();
		$('#countRack_'+key).val("1");
		$('#countRack_'+key).focus();
		//console.log('countRack_'+key+'_true');	
	} else {
		//$('#countracksFound'+key).hide();
		$('#countRack_'+key).val("0");
		$('#countRack_'+key).focus();
		//console.log('countRack_'+key+'_false');	
	}	
}
function fillbulkHideShow(x){
	var $x = $(x),
		key = $x[0].id.split('_')[1];
	if($(x).is(':checked')) {
		//$('#countbulkFound'+key).show();
		$('#countBulk_'+key).val(1);
		$('#countBulk_'+key).focus();
	} else {
		//$('#countbulkFound'+key).hide();
		$('#countBulk_'+key).val(0);
		$('#countBulk_'+key).focus();		
	}
}
function fillopenHideShow(x){
	var $x = $(x),
		key = $x[0].id.split('_')[1];
	if($(x).is(':checked')) {
		//$('#countopenFound'+key).show();
		$('#countOpen_'+key).val(1);
		$('#countOpen_'+key).focus();		
	} else {
		//$('#countopenFound'+key).hide();
		$('#countOpen_'+key).val(0);
		$('#countOpen_'+key).focus();		
	}
}

function fillSection(){
	var txtCount = parseInt($("#noofstoragesection").val());
	if(totCount < txtCount){
		for(var counter= parseInt(totCount) + 1;counter<=txtCount;counter++){
			var ai = oTable.fnAddData(['<h1 class="vendorrequest_text">Section name: sectionName_'+counter+ '</h1>']);
			var n = oTable.fnSettings().aoData[ai[0]].nTr;
			
			/*$('td', n)[0].setAttribute( 'class', 'warehousetd');*/
			
			n.setAttribute('id', counter);
			n.setAttribute('class', 'mainTr deleteTr_'+counter);
			$("#subContent").append(
				'<div id="step_'+ counter +'" class="rowSection">'+
				'<div class="col-lg-4 col-lg-offset-4 col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2 commargin_ttop_20">'+
					'<div class="row">'+
						'<label for="sectionName_" class="ripple float_l" style="font-size: 15px;color: #244996 !important;">Enter Section</label>'+
						'<div class="form-group req_flds col-lg-12 commargin_top">'+
							'<input type="text" name="sectionName_'+counter+'" id="sectionName_'+counter+'" class="parent_txts tbl_input" label="Enter Section" value="Section Name_'+counter+'" >'+
						'</div>'+
					'</div>'+
					'<div class="row">'+
						'<label for="sectionLength_" class="ripple float_l commargin_top" style="font-size: 15px;color: #244996 !important;">Section Length</label>'+
						'<div class="form-group req_flds col-lg-12 commargin_top" >'+
							'<input type="text" name="sectionLength_'+counter+'" id="sectionLength_'+counter+'" class="parent_txts tbl_input" placeholder="Section Length" value="0" >'+
							'<div class="error_message" style="display:none;"><p>Please enter VoucherNo...</p> </div> '+
						'</div>'+
					'</div>'+
					'<div class="row">'+
						'<label for="sectionBreadth_" class="ripple float_l commargin_top" style="font-size: 15px;color: #244996 !important;">Section Breadth</label>'+
						'<div class="form-group req_flds col-lg-12 commargin_top" >'+
							'<input type="text" name="sectionBreadth_'+counter+'" id="sectionBreadth_'+counter+'" class="parent_txts tbl_input" label="Section Breadth" value="0" >'+
							'<div class="error_message" style="display:none;"><p>Please enter VoucherNo...</p> </div> '+
						'</div>'+
					'</div>'+
					'<div class="row">'+
						'<label for="sectionArea_" class="ripple float_l commargin_top" style="font-size: 15px;color: #244996 !important;">Section Area</label>'+
						'<div class="form-group req_flds col-lg-12 commargin_top" >'+
							'<input type="text" name="sectionArea_'+counter+'" id="sectionArea_'+counter+'" class="parent_txts tbl_input" label="Section Area" value="0" >'+
							'<div class="error_message" style="display:none;"><p>Please enter VoucherNo...</p> </div> '+
						'</div>'+
					'</div>'+
				'</div>'+
					'<form class="form-horizontal">'+
						'<div class="col-lg-12">'+
							'<h1 class="txt_center">select storage types available in this section</h1>'+
							'<div class="row">'+
								'<div class="col-lg-4 col-lg-offset-4 commargin_top">'+
									'<div class="radio_check">'+
										'<p>'+
											'<input class="sample" type="checkbox" name="racksFound_'+counter +'" id="racksFound_'+counter+'" value="1">'+'<label for="racksFound_'+counter+'" class="ripple">Do you have multi no. Rack storage</label>'+
										'</p>'+
									'</div>'+
								'</div>'+
								'<div class="col-lg-4 col-lg-offset-4" id="countracksFound'+counter +'" style="display:none;">'+
									'<label for="countRack_" class="ripple float_l commargin_top commargin_bottom" style="font-size: 15px;color: #244996 !important;">Enter No. of Rack Storage </label>'+
									'<input type="text" class="parent_txts tbl_input" name="countRack_'+counter+'" id="countRack_'+counter+'" value="0" >'+
								'</div>'+
							'</div>'+
							'<div class="row">'+
								'<div class="col-lg-4 col-lg-offset-4 commargin_top">'+'<div class="radio_check">'+'<p>'+
									'<input class="sample" type="checkbox" name="bulkFound_'+counter +'" id="bulkFound_'+counter+'" value="1">'+'<label for="bulkFound_'+counter+'" class="ripple">Do you have multi no. Bulk storage</label>'+
									'</p>'+'</div>'+
								'</div>'+
								'<div class="col-lg-4 col-lg-offset-4" id="countbulkFound'+counter +'" style="display:none;">'+
									'<label for="countBulk_" class="ripple float_l commargin_top commargin_bottom" style="font-size: 15px;color: #244996 !important;">Enter No. of Bulk Storage </label>'+
									'<input type="text" class="parent_txts tbl_input" name="countBulk_'+counter+'" id="countBulk_'+counter+'" value="0" >'+
								'</div>'+
							'</div>'+
							'<div class="row commargin_bottom">'+
								'<div class="col-lg-4 col-lg-offset-4 commargin_top">'+'<div class="radio_check">'+'<p>'+
									'<input class="sample" type="checkbox" name="openFound_'+counter +'" id="openFound_'+counter+'" value="1" onchange="fillopenHideShow(this)" >'+'<label for="openFound_'+counter+'" class="ripple">Do you have multi no. Open storage</label>'+
									'</p>'+'</div>'+
								'</div>'+
								'<div class="col-lg-4 col-lg-offset-4" id="countopenFound'+counter +'" style="display:none;">'+
									'<label for="countOpen_" class="ripple float_l commargin_top commargin_bottom" style="font-size: 15px;color: #244996 !important;">Enter No. of Open Storage </label>'+
									'<input type="text" class="parent_txts tbl_input" name="countOpen_'+counter+'" id="countOpen_'+counter+'" value="0" >'+
								'</div>'+
							'</div>'+
						'</div>'+
					'</form>'+
				'</div>');	
		}
	}
	else{
		for(var i= parseInt(totCount);i>txtCount;i--){
			$('#step_'+i).remove();
			oTable.$("tr#"+i).each(function(){
				var target_row = $(this).get(0); 
				var aPos = oTable.fnGetPosition(target_row); 
				oTable.fnDeleteRow(aPos);
			});
		}
	}
	totCount = txtCount;
	trClick();
}

		
function renderData() {
	var newRowID = null; 
	// prepare the data
	var source =
	{
		dataType: "json",  //"json",
		dataFields: [
			{ name: "Id", type: "number" },
			{ name: "Name", type: "string" },
			{ name: "Type", type: "string" },
			{ name: "ParentID", type: "number" },
			{ name: "TypeId", type: "number" },
			{ name: "Length", type: "number" },
			{ name: "Breadth", type: "number" },
			{ name: "Height", type: "number" },
			{ name: "Capacity", type: "number" }
		],
		hierarchy:
		{
			keyDataField: { name: 'Id' },
			parentDataField: { name: 'ParentID' }
		},
		id: 'Id',
		//url: 'E:/xampp/htdocs/jqxgrid/jqwidgets/demos/sampledata/locations.tsv',
		localData: arr_employees,
		 addRow: function (rowID, rowData, position, parentID, commit) {
			 // synchronize with the server - send insert command
			 // call commit with parameter true if the synchronization with the server is successful 
			 // and with parameter false if the synchronization failed.
			 // you can pass additional argument to the commit callback which represents the new ID if it is generated from a DB.
			 commit(true);
			 newRowID = rowID;
		 },
		 updateRow: function (rowID, rowData, commit) {
			 // synchronize with the server - send update command
			 // call commit with parameter true if the synchronization with the server is successful 
			 // and with parameter false if the synchronization failed.
			 commit(true);
		 },
		 deleteRow: function (rowID, commit) {
			 // synchronize with the server - send delete command
			 // call commit with parameter true if the synchronization with the server is successful 
			 // and with parameter false if the synchronization failed.
			 commit(true);
		 }
	 };

	var dataAdapter = new $.jqx.dataAdapter(source, {
		loadComplete: function () {
			// data is loaded.
		}
	});

	$("#treeGrid").jqxTreeGrid({
		width: '100%',
		source: dataAdapter, 
		pageable: true,
		editable: true,
		showToolbar: true,
		//height: 200,
		altRows: true,
		ready: function()
		{
			// called when the DatatreeGrid is loaded.
			//$("#treeGrid").jqxTreeGrid('lockRow', 1);
			$("#treeGrid").jqxTreeGrid('expandRow',1);
			$("#treeGrid").jqxTreeGrid('hideColumn', 'Id');
			$("#treeGrid").jqxTreeGrid('hideColumn', 'ParentID');
			$("#treeGrid").jqxTreeGrid('hideColumn', 'TypeId');			
		},
		pagerButtonsCount: 8,
		toolbarHeight:30,
		renderToolbar: function(toolBar)
		{
			 var toTheme = function (className) {
				if (theme == "") return className;
				return className + " " + className + "-" + theme;
			} 

			// appends buttons to the status bar.
			var container = $("<div style='overflow: hidden; position: relative; height: 100%; width: 100%;'></div>");
			var buttonTemplate = "<div style='float: left; padding: 3px; margin: 2px;'><div style='margin: 4px; width: 16px; height: 16px;'></div></div>";
			var addButton = $(buttonTemplate);
			var editButton = $(buttonTemplate);
			var deleteButton = $(buttonTemplate);
			var cancelButton = $(buttonTemplate);
			var updateButton = $(buttonTemplate);
			container.append(addButton);
			container.append(editButton);
			container.append(deleteButton);
			container.append(cancelButton);
			container.append(updateButton);

			toolBar.append(container);
			addButton.jqxButton({cursor: "pointer", enableDefault: false, disabled: true, height: 25, width: 25 });
			addButton.find('div:first').addClass(toTheme('jqx-icon-plus'));
			addButton.jqxTooltip({ position: 'bottom', content: "Add"});

			editButton.jqxButton({ cursor: "pointer", disabled: true, enableDefault: false,  height: 25, width: 25 });
			editButton.find('div:first').addClass(toTheme('jqx-icon-edit'));
			editButton.jqxTooltip({ position: 'bottom', content: "Edit"});

			deleteButton.jqxButton({ cursor: "pointer", disabled: true, enableDefault: false,  height: 25, width: 25 });
			deleteButton.find('div:first').addClass(toTheme('jqx-icon-delete'));
			deleteButton.jqxTooltip({ position: 'bottom', content: "Delete"});

			updateButton.jqxButton({ cursor: "pointer", disabled: true, enableDefault: false,  height: 25, width: 25 });
			updateButton.find('div:first').addClass(toTheme('jqx-icon-save'));
			updateButton.jqxTooltip({ position: 'bottom', content: "Save Changes"});

			cancelButton.jqxButton({ cursor: "pointer", disabled: true, enableDefault: false,  height: 25, width: 25 });
			cancelButton.find('div:first').addClass(toTheme('jqx-icon-cancel'));
			cancelButton.jqxTooltip({ position: 'bottom', content: "Cancel"});

			var updateButtons = function (action) {
				switch (action) {
					case "Select":
						addButton.jqxButton({ disabled: false });
						deleteButton.jqxButton({ disabled: false });
						editButton.jqxButton({ disabled: false });
						cancelButton.jqxButton({ disabled: true });
						updateButton.jqxButton({ disabled: true });
						break;
					case "Unselect":
						addButton.jqxButton({ disabled: true });
						deleteButton.jqxButton({ disabled: true });
						editButton.jqxButton({ disabled: true });
						cancelButton.jqxButton({ disabled: true });
						updateButton.jqxButton({ disabled: true });
						break;
					case "Edit":
						addButton.jqxButton({ disabled: true });
						deleteButton.jqxButton({ disabled: true });
						editButton.jqxButton({ disabled: true });
						cancelButton.jqxButton({ disabled: false });
						updateButton.jqxButton({ disabled: false });
						break;
					case "End Edit":
						addButton.jqxButton({ disabled: false });
						deleteButton.jqxButton({ disabled: false });
						editButton.jqxButton({ disabled: false });
						cancelButton.jqxButton({ disabled: true });
						updateButton.jqxButton({ disabled: true });
						break;

				}
			}

			var rowKey = null;
			$("#treeGrid").on('rowSelect', function (event) {
				var args = event.args;
				rowKey = args.key;
				updateButtons('Select');
			});
			$("#treeGrid").on('rowUnselect', function (event) {
				updateButtons('Unselect');
			});
			$("#treeGrid").on('rowEndEdit', function (event) {
				/*
				var args = event.args;
				rowKey = args.key;
				var row = args.row;
				var icurRowId = row.Id;
				var icurTypeId = row.TypeId;
				var icurName = row.Name;
				var icurParentId = row.ParentID;
				var icurLength = row.Length;
				var icurBreadth = row.Breadth;
				var icurHeight = row.Height;
				var icurCapacity = row.Capacity;
				$.ajax({
					url:getBaseURL()+"warehouse/index/warehouse-plan",
					type:"post",
					data:"warehouseId="+$("#warehouseId").val()+"&icurRowId="+icurRowId+"&icurTypeId="+icurTypeId+"&icurName="+icurName+"&icurParentId="+icurParentId+"&mode=UpdatewarehouseDet",
					//dataType:"json",
					success:function(data, textStatus, jqXHR){	
						//$("#dataTable").jqxGrid("deleterow", dataRecord.uid);
						
					},
					error:function(jqXHR, textStatus, errorThrown){
						alert(textStatus+"-----"+errorThrown);
					}
				});
				*/				
						
				updateButtons('End Edit');
			});
			$("#treeGrid").on('rowBeginEdit', function (event) {
				updateButtons('Edit');
			});

			var iCurrTypeId=0;
			var sCurrName="";
			var sCurrType="";
			var iPrevRowId=0;
			var iPrevTypeId=0;
			$('#treeGrid').on('rowSelect', function (event) {
				  var args = event.args;
				  var row = args.row;
				  iPrevRowId = row.Id;
				  iPrevTypeId=row.TypeId;
				  //console.log(row.TypeId);
			});
			addButton.click(function (event) {
				if(iPrevTypeId == "0") {
					iCurrTypeId=1;
					sCurrName="Section Demo";
					sCurrType="Section";
				}
				else if(iPrevTypeId == "1") {
					iCurrTypeId=2;
					sCurrName="Rack Demo";
					sCurrType="Rack";
				}
				else if(iPrevTypeId == "2" || iPrevTypeId=="3"){
					iCurrTypeId = 5;
					sCurrName="Bin Demo";
					sCurrType="Bin";
				}
	
				if (!addButton.jqxButton('disabled')) {
				
					var icurrParentId = iPrevRowId;
					$("#treeGrid").jqxTreeGrid('expandRow', rowKey);
					// add new empty row.
					$("#treeGrid").jqxTreeGrid('addRow', null, { "Name": sCurrName, "TypeId": iCurrTypeId, "Type": sCurrType, "ParentID" : iPrevRowId, "Length" : 0, "Breadth" : 0, "Height" : 0, "Capacity" : 0 }, 'last', rowKey);
					// select the first row and clear the selection.
					$("#treeGrid").jqxTreeGrid('clearSelection');
					$("#treeGrid").jqxTreeGrid('selectRow', newRowID);
					// edit the new row.
					$("#treeGrid").jqxTreeGrid('beginRowEdit', newRowID);
					
					/*$.ajax({
						url:getBaseURL()+"warehouse/index/warehouse-plan",
						type:"post",
						data:"warehouseId="+$("#warehouseId").val()+"&icurRowId="+rowKey+"&icurTypeId="+iCurrTypeId+"&icurName="+sCurrName+"&icurParentId="+icurrParentId+"&mode=UpdatewarehouseDet",
						//dataType:"json",
						success:function(data, textStatus, jqXHR){	
							//$("#dataTable").jqxGrid("deleterow", dataRecord.uid);
							
						},
						error:function(jqXHR, textStatus, errorThrown){
							alert(textStatus+"-----"+errorThrown);
						}
					});*/
							
					updateButtons('add');
				}
			});

			cancelButton.click(function (event) {
				if (!cancelButton.jqxButton('disabled')) {
					// cancel changes.
					$("#treeGrid").jqxTreeGrid('endRowEdit', rowKey, true);
				}
			});

			updateButton.click(function (event) {
				if (!updateButton.jqxButton('disabled')) {
					// save changes.
					$("#treeGrid").jqxTreeGrid('endRowEdit', rowKey, false);
				}
			});

			editButton.click(function () {
				if (!editButton.jqxButton('disabled')) {
					$("#treeGrid").jqxTreeGrid('beginRowEdit', rowKey);
					updateButtons('edit');

				}
			});
			deleteButton.click(function () {
				if (!deleteButton.jqxButton('disabled')) {
					var selection = $("#treeGrid").jqxTreeGrid('getSelection');
					if (selection.length > 1) {
						var keys = new Array();
						for (var i = 0; i < selection.length; i++) {
							keys.push($("#treeGrid").jqxTreeGrid('getKey', selection[i]));
						}
						$("#treeGrid").jqxTreeGrid('deleteRow', keys);
					}
					else {
						$("#treeGrid").jqxTreeGrid('deleteRow', rowKey);
					}
					updateButtons('delete');

				}
			});
		},
		columns: [
		{ text: 'Name', dataField: "Name", align: 'center'},
		{
		   text: 'Type', dataField: 'Type', width: 250, columnType: "template",
		   createEditor: function (row, cellvalue, editor, cellText, width, height) {
			   // construct the editor. 
			   var source = ["Section", "Rack", "Bulk", "Open", "Bin"];
			   editor.jqxDropDownList({autoDropDownHeight: true, source: source, width: '100%', height: '100%',selectedIndex: 0 });
		   },
		   initEditor: function (row, cellvalue, editor, celltext, width, height) {
			   // set the editor's current value. The callback is called each time the editor is displayed.
			   editor.jqxDropDownList('selectItem', cellvalue);
		   },
		   getEditorValue: function (row, cellvalue, editor) {
			   // return the editor's value.
			   //alert(editor.val());
			   return editor.val();
		   }
		},
		{ text: 'Id', dataField: "Id", align: 'right', cellsAlign: 'right' , cellsFormat: 'd2', width: '5%' },
		{ text: 'ParentID', dataField: "ParentID", align: 'right', cellsAlign: 'right' , cellsFormat: 'd2', width: '5%' },
		{ text: 'TypeId', dataField: "TypeId", align: 'right', cellsAlign: 'right' , cellsFormat: 'd2', width: '5%' },
		{ text: 'Length', dataField: "Length", align: 'right', cellsAlign: 'right' , cellsFormat: 'd2', width: '10%' },
		{ text: 'Breadth', dataField: "Breadth", align: 'right', cellsAlign: 'right' , cellsFormat: 'd2', width: '10%' },
		{ text: 'Height', dataField: "Height", align: 'right', cellsAlign: 'right' , cellsFormat: 'd2', width: '10%' },
		{ text: 'Capacity', dataField: "Capacity", align: 'right', cellsAlign: 'right' , cellsFormat: 'd2', width: '10%' }
		  
		]
	});
	/*$('#treeGrid').on('rowSelect', function (event) {
		  var args = event.args;
		  var row = args.row;
		  alert("The row you selected is: " + row.Name + " " + row.Type);
	});*/
}
</script>
	